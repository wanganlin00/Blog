{
  "hash": "8089eb51a8e4ad4478df31eb6022c299",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TCGA\"\ndate: \"2024-09-24\"\ndate-modified: today\ncategories: [bioinformatics, database]\nexecute: \n  cache: true\n---\n\n\n\n参考资料\n\n-   <https://portal.gdc.cancer.gov/>\n\n-   <https://www.jingege.wang/2024/02/25/tcga-gdc-data-portal-2-0/>\n\n-   <https://www.jingege.wang/2022/07/16/tcgar/>\n\n## 数据下载\n\n可以从Projects中查找，也可以自定义队列。\n\n### 已有项目\n\n**以肺腺癌数据（TCGA-LUAD）为例。首先要先整理出该癌症的基因表达矩阵。**（也有一些数据库提供整理好的TCGA癌症数据，如*UCSC xena数据库*对TCGA数据进行了整理，可直接下载表达矩阵和临床数据用于研究**）**\n\n![](images/clipboard-4037497718.png)\n\n```         \nProjects --> \n             Primary Site: bronchus and lung\n             Program: TCGA\n             Data Category: transcriptome profiling\n             Experimental Strategy: RNA-Seq\n    \nproject: TCGA-LUAD\n```\n\n![](images/clipboard-1503211737.png)\n\n### 自定义项目\n\n![](images/clipboard-4190718251.png)\n\n```         \nCohort Builder --> \n\n    general --> \n             Program: TCGA\n             project: TCGA-LUAD\n             Disease Type: adenomas and adenocarcinomas\n             \n    Available data --> \n             Data Category: transcriptome profiling\n             Data Type: Gene Expression Quantification\n             Experimental Strategy: RNA-Seq\n             Workflow Type: STAR-Counts（即HTSeq-Counts、HTSeq-FPKM、HTSeq-FPKM-UQ数据都放入了文件STAR–Counts中）\n```\n\n![](images/clipboard-3269993218.png)\n\n转到存储库（Repository），选择自己的cohort，选择自己需要的数据类型\n\n![](images/clipboard-4148895831.png)\n\n全部添加到cart\n\n![](images/clipboard-92313651.png)\n\n![](images/clipboard-2551723785.png)\n\n![](images/clipboard-2258074177.png)\n\n## 样本id\n\n包括文件信息和样本barcode的关系\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\n\nmetadata <- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\") |> as_tibble()\n\n\nsample_info <- metadata %>% \n    select(associated_entities,file_name) %>% \n    unnest(associated_entities) %>% \n    select(sample_id =entity_submitter_id,file_name) \n    \n\nsample_info %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  sample_id                    file_name                                        \n  <chr>                        <chr>                                            \n1 TCGA-38-7271-01A-11R-2039-07 98d020b1-0467-4131-a3cc-64d288d0e9e7.rna_seq.aug…\n2 TCGA-55-7914-01A-11R-2170-07 22002e84-1d7a-4f93-9934-9d74f45195c0.rna_seq.aug…\n3 TCGA-95-7043-01A-11R-1949-07 d067f93b-7182-4a34-ba8e-be73589b7420.rna_seq.aug…\n4 TCGA-73-4658-01A-01R-1755-07 367864dd-ccd2-473e-9661-6ff4342a4e64.rna_seq.aug…\n5 TCGA-86-8076-01A-31R-2241-07 34774d7b-1184-4b5f-b6a9-e16c428ca7ce.rna_seq.aug…\n6 TCGA-55-7726-01A-11R-2170-07 74ab82a4-a55b-4e4c-b3f5-1f9317860914.rna_seq.aug…\n```\n\n\n:::\n:::\n\n\n\n## 表达矩阵\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#获取gdc_download文件夹下的所有TSV表达文件的 路径+文件名\ncounts_file <- list.files(\"data/gdc_download_20240704_131631.625023\",pattern = \"*.tsv\",recursive = TRUE,full.names = T)\ncounts_file[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data/gdc_download_20240704_131631.625023/0052ae83-7ae5-470a-a125-5cd94a9fa9e9/a6a6b9c6-9db7-42b3-a09f-770b7e126fbb.rna_seq.augmented_star_gene_counts.tsv\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 使用 basename() 获取最终的文件名\ncounts_file_names <- basename(counts_file)\n\ncounts_file_names[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"a6a6b9c6-9db7-42b3-a09f-770b7e126fbb.rna_seq.augmented_star_gene_counts.tsv\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npath = counts_file[1]\ndata.table::fread(input = counts_file[1],sep = \"\\t\") %>% \n    select(1,4) %>% \n    filter(row_number()>4) %>% \n    column_to_rownames(var = \"gene_id\") %>% \n    head() ->x\ncolnames(x) <-sample_info %>% \n    filter(file_name == counts_file_names[1]) %>%\n    pull(sample_id)\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   TCGA-35-5375-01A-01R-1628-07\nENSG00000000003.15                         3715\nENSG00000000005.6                             0\nENSG00000000419.13                         2468\nENSG00000000457.14                          249\nENSG00000000460.17                          395\nENSG00000000938.13                          150\n```\n\n\n:::\n:::\n\n\n\n![](images/clipboard-2405009584.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngene_expr <- function(file_path, file_basename) {\n    \n    # 读取并处理数据\n    expr <- data.table::fread(input = file_path,sep = \"\\t\") %>%\n        select(1, 4) %>%\n        dplyr::filter(row_number() > 4) %>%\n        column_to_rownames(var = \"gene_id\")\n    \n    # 将列名替换为样本ID\n    colnames(expr) <- sample_info %>%\n        dplyr::filter(file_name == file_basename) %>%\n        pull(sample_id)\n    \n    return(expr)\n}\n\n\nexpr1 <- gene_expr(file_path = counts_file[1],\n                   file_basename = counts_file_names[1]) \nexpr1 %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   TCGA-35-5375-01A-01R-1628-07\nENSG00000000003.15                         3715\nENSG00000000005.6                             0\nENSG00000000419.13                         2468\nENSG00000000457.14                          249\nENSG00000000460.17                          395\nENSG00000000938.13                          150\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexpr_list <- vector(\"list\", length(counts_file))\nexpr_list <- purrr::map2(counts_file,counts_file_names, gene_expr)\n\nexpr_counts <- do.call(cbind, expr_list)\n\nwrite.csv(expr_counts,'data/Counts_matrix.csv',row.names = TRUE)\n```\n:::\n\n\n\n### normal 和 tumor\n\n根据TCGA样本的命名可以区分正常组织和肿瘤样本的测序结果 其中 14、15位置编号大于10 表示正常\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCOUNT_matrix <- data.table::fread('data/COUNT_matrix.csv') \n\n\nstr_sub(colnames(COUNT_matrix),14,15) |> table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     01  02  11 \n  1 481   2  53 \n```\n\n\n:::\n:::\n\n\n\n## 临床表型数据\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\")\n\ncase_info <- metadata %>% \n    select(associated_entities,file_name) %>% \n    unnest(associated_entities) %>% \n    select(sample_id = entity_submitter_id,case_id) \ncase_info %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  sample_id                    case_id                             \n  <chr>                        <chr>                               \n1 TCGA-38-7271-01A-11R-2039-07 8214a0d1-5e2d-4a7a-acb1-e5580755db83\n2 TCGA-55-7914-01A-11R-2170-07 69dba721-a168-47a4-b7ff-80a448bad654\n3 TCGA-95-7043-01A-11R-1949-07 c650b1ff-8a4c-4ee9-b7c1-268c28c83827\n4 TCGA-73-4658-01A-01R-1755-07 afb91740-2668-46d7-ba01-bb26153ad1c7\n5 TCGA-86-8076-01A-31R-2241-07 8609edfc-119d-4d63-9188-c86aabd5ca52\n6 TCGA-55-7726-01A-11R-2170-07 923b37e4-fcf7-46a0-8cb2-9139711fec7b\n```\n\n\n:::\n\n```{.r .cell-code}\nclinical <- read_delim('data/clinical.cart.2024-07-04/clinical.tsv',col_names =  T)\n\nclinical <- clinical |> distinct(case_id,.keep_all = TRUE)\n\n\n\nclinical_matrix <- left_join(case_info ,clinical,by = join_by(case_id))\n\nclinical_matrix <- clinical_matrix |> select(-case_id)\n```\n:::\n\n\n\n## TCGAWorkflow\n\n<https://bioconductor.org/packages/release/workflows/html/TCGAWorkflow.html>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}