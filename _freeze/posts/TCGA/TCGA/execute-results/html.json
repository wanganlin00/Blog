{
  "hash": "f84070578e7cac0a3efcfef0b3bbc9f3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TCGA\"\ndate: \"2024-09-24\"\ndate-modified: today\ncategories: [bioinformatics, database]\nimage: \"example.svg\"\n---\n\n\n# TCGA数据库\n\n<https://portal.gdc.cancer.gov/>\n\n<https://www.jingege.wang/2024/02/25/tcga-gdc-data-portal-2-0/>\n\n<https://www.jingege.wang/2022/07/16/tcgar/>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\n\njson <- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\") |> as_tibble()\n\njson |> select(associated_entities)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 536 × 1\n   associated_entities\n   <list>             \n 1 <df [1 × 4]>       \n 2 <df [1 × 4]>       \n 3 <df [1 × 4]>       \n 4 <df [1 × 4]>       \n 5 <df [1 × 4]>       \n 6 <df [1 × 4]>       \n 7 <df [1 × 4]>       \n 8 <df [1 × 4]>       \n 9 <df [1 × 4]>       \n10 <df [1 × 4]>       \n# ℹ 526 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\njson$associated_entities[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           entity_submitter_id entity_type                              case_id\n1 TCGA-38-7271-01A-11R-2039-07     aliquot 8214a0d1-5e2d-4a7a-acb1-e5580755db83\n                             entity_id\n1 8d895d3d-9598-459b-813e-3fc84dd3efe8\n```\n\n\n:::\n\n```{.r .cell-code}\n# sample_id <- map_vec(json$associated_entities,~ .x[,1])\nsample_id <- sapply(json$associated_entities,function(x){x[,1]})\n\n\nfile_sample <- tibble(sample_id,file_name=json$file_name) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#获取gdc_download文件夹下的所有TSV表达文件的 路径+文件名\ncount_file <- list.files(\"data/gdc_download_20240704_131631.625023\",pattern = \"*.tsv\",recursive = TRUE)\n#在count_file中分割出文件名\ncount_file_name <- str_split(count_file,pattern = '/') \n\ncount_file_name <- sapply(count_file_name,function(x){x[2]})\n```\n:::\n\n\n## 计数矩阵\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatrix = data.frame(matrix(nrow=60660,ncol=0))\n\n\nfor (i in 1:length(count_file)) {\n    path = paste0('data/gdc_download_20240704_131631.625023/',\n                  count_file[i])\n    data <- read_tsv(path, col_names = T, skip = 1)\n    data <- data[-c(1:4), c(1, 4)] |> column_to_rownames(var = \"gene_id\")  #取出ESEMBL_id列1 和 unstranded列 4，即count数据，对应其它数据，第2列为gene symbol\n    colnames(data) <- file_sample$sample_id[which(file_sample$file_name == count_file_name[i])]\n    \n    matrix <- cbind(matrix, data)\n}\nwrite.csv(matrix,'data/COUNT_matrix.csv',row.names = TRUE)\n```\n:::\n\n\n## normal 和 tumor\n\n根据TCGA样本的命名可以区分正常组织和肿瘤样本的测序结果 其中 14、15位置编号大于10 表示正常\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCOUNT_matrix <- read_csv('data/COUNT_matrix.csv') |> column_to_rownames(var = \"...1\")\n\n\nstr_sub(colnames(COUNT_matrix),14,15) |> table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 01  02  11 \n481   2  53 \n```\n\n\n:::\n:::\n\n\n## 表型矩阵\n\n\n::: {.cell}\n\n```{.r .cell-code}\njson <- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\")\n\nentity_submitter_id <- sapply(json$associated_entities,function(x){x[,1]})\ncase_id <- sapply(json$associated_entities,function(x){x[,3]})\nsample_case <- t(rbind(entity_submitter_id,case_id)) |> as_tibble()\n\nclinical <- read.delim('data/clinical.cart.2024-07-04/clinical.tsv',header = T)\n\nclinical <- clinical |> distinct(case_id,.keep_all = TRUE)\n\n\n\n\n\nclinical_matrix <- left_join(sample_case,clinical,by = join_by(case_id))\n\nclinical_matrix <- clinical_matrix |> select(-case_id)\n```\n:::\n\n\n## miRNA 计数矩阵\n\n\n::: {.cell}\n\n```{.r .cell-code}\njson <- jsonlite::fromJSON(\"metadata.cart.2022-09-27.json\")\n\n#id <- json$associated_entities[[1]][,1]\nsample_id <- sapply(json$associated_entities,function(x){x[,1]})\nfile_sample <- data.frame(sample_id,file_name=json$file_name)  \n\n#获取gdc_download文件夹下的所有miRNA表达文件的 路径+文件名\ncount_file <- list.files('gdc_download_20220927_150057.906231',pattern = '*quantification.txt',recursive = TRUE)\n#在count_file中分割出文件名\ncount_file_name <- strsplit(count_file,split='/')\ncount_file_name <- sapply(count_file_name,function(x){x[2]})\n\nmatrix = data.frame(matrix(nrow=1881,ncol=0))\nfor (i in 1:length(count_file)){\n  path = paste0('gdc_download_20220927_150057.906231//',count_file[i])\n  data<- read.delim(path,fill = TRUE,header = T,row.names = 1)\n  data <- data[1]   #取出count列（第1列），rpm列（第2列）\n  colnames(data) <- file_sample$sample_id[which(file_sample$file_name==count_file_name[i])]\n  matrix <- cbind(matrix,data)\n}\n```\n:::\n\n\n## TCGAWorkflow\n\n<https://bioconductor.org/packages/release/workflows/html/TCGAWorkflow.html>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}