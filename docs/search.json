[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post.Welcome!"
  },
  {
    "objectID": "posts/TCGA/TCGA.html",
    "href": "posts/TCGA/TCGA.html",
    "title": "TCGA",
    "section": "",
    "text": "https://portal.gdc.cancer.gov/\nhttps://www.jingege.wang/2024/02/25/tcga-gdc-data-portal-2-0/\nhttps://www.jingege.wang/2022/07/16/tcgar/\n\nShow the codelibrary(jsonlite)\n\njson &lt;- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\") |&gt; as_tibble()\n\njson |&gt; select(associated_entities)\n\n# A tibble: 536 × 1\n   associated_entities\n   &lt;list&gt;             \n 1 &lt;df [1 × 4]&gt;       \n 2 &lt;df [1 × 4]&gt;       \n 3 &lt;df [1 × 4]&gt;       \n 4 &lt;df [1 × 4]&gt;       \n 5 &lt;df [1 × 4]&gt;       \n 6 &lt;df [1 × 4]&gt;       \n 7 &lt;df [1 × 4]&gt;       \n 8 &lt;df [1 × 4]&gt;       \n 9 &lt;df [1 × 4]&gt;       \n10 &lt;df [1 × 4]&gt;       \n# ℹ 526 more rows\n\nShow the codejson$associated_entities[[1]]\n\n           entity_submitter_id entity_type                              case_id\n1 TCGA-38-7271-01A-11R-2039-07     aliquot 8214a0d1-5e2d-4a7a-acb1-e5580755db83\n                             entity_id\n1 8d895d3d-9598-459b-813e-3fc84dd3efe8\n\nShow the code# sample_id &lt;- map_vec(json$associated_entities,~ .x[,1])\nsample_id &lt;- sapply(json$associated_entities,function(x){x[,1]})\n\n\nfile_sample &lt;- tibble(sample_id,file_name=json$file_name) \n\n\n\nShow the code#获取gdc_download文件夹下的所有TSV表达文件的 路径+文件名\ncount_file &lt;- list.files(\"data/gdc_download_20240704_131631.625023\",pattern = \"*.tsv\",recursive = TRUE)\n#在count_file中分割出文件名\ncount_file_name &lt;- str_split(count_file,pattern = '/') \n\ncount_file_name &lt;- sapply(count_file_name,function(x){x[2]})\n\n\n\n\nShow the codematrix = data.frame(matrix(nrow=60660,ncol=0))\n\n\nfor (i in 1:length(count_file)) {\n    path = paste0('data/gdc_download_20240704_131631.625023/',\n                  count_file[i])\n    data &lt;- read_tsv(path, col_names = T, skip = 1)\n    data &lt;- data[-c(1:4), c(1, 4)] |&gt; column_to_rownames(var = \"gene_id\")  #取出ESEMBL_id列1 和 unstranded列 4，即count数据，对应其它数据，第2列为gene symbol\n    colnames(data) &lt;- file_sample$sample_id[which(file_sample$file_name == count_file_name[i])]\n    \n    matrix &lt;- cbind(matrix, data)\n}\nwrite.csv(matrix,'data/COUNT_matrix.csv',row.names = TRUE)\n\n\n\n根据TCGA样本的命名可以区分正常组织和肿瘤样本的测序结果 其中 14、15位置编号大于10 表示正常\n\nShow the codeCOUNT_matrix &lt;- read_csv('data/COUNT_matrix.csv') |&gt; column_to_rownames(var = \"...1\")\n\n\nstr_sub(colnames(COUNT_matrix),14,15) |&gt; table()\n\n\n 01  02  11 \n481   2  53 \n\n\n\n\nShow the codejson &lt;- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\")\n\nentity_submitter_id &lt;- sapply(json$associated_entities,function(x){x[,1]})\ncase_id &lt;- sapply(json$associated_entities,function(x){x[,3]})\nsample_case &lt;- t(rbind(entity_submitter_id,case_id)) |&gt; as_tibble()\n\nclinical &lt;- read.delim('data/clinical.cart.2024-07-04/clinical.tsv',header = T)\n\nclinical &lt;- clinical |&gt; distinct(case_id,.keep_all = TRUE)\n\n\n\n\n\nclinical_matrix &lt;- left_join(sample_case,clinical,by = join_by(case_id))\n\nclinical_matrix &lt;- clinical_matrix |&gt; select(-case_id)\n\n\n\n\nShow the codejson &lt;- jsonlite::fromJSON(\"metadata.cart.2022-09-27.json\")\n\n#id &lt;- json$associated_entities[[1]][,1]\nsample_id &lt;- sapply(json$associated_entities,function(x){x[,1]})\nfile_sample &lt;- data.frame(sample_id,file_name=json$file_name)  \n\n#获取gdc_download文件夹下的所有miRNA表达文件的 路径+文件名\ncount_file &lt;- list.files('gdc_download_20220927_150057.906231',pattern = '*quantification.txt',recursive = TRUE)\n#在count_file中分割出文件名\ncount_file_name &lt;- strsplit(count_file,split='/')\ncount_file_name &lt;- sapply(count_file_name,function(x){x[2]})\n\nmatrix = data.frame(matrix(nrow=1881,ncol=0))\nfor (i in 1:length(count_file)){\n  path = paste0('gdc_download_20220927_150057.906231//',count_file[i])\n  data&lt;- read.delim(path,fill = TRUE,header = T,row.names = 1)\n  data &lt;- data[1]   #取出count列（第1列），rpm列（第2列）\n  colnames(data) &lt;- file_sample$sample_id[which(file_sample$file_name==count_file_name[i])]\n  matrix &lt;- cbind(matrix,data)\n}\n\n\n\nhttps://bioconductor.org/packages/release/workflows/html/TCGAWorkflow.html"
  },
  {
    "objectID": "posts/TCGA/TCGA.html#计数矩阵",
    "href": "posts/TCGA/TCGA.html#计数矩阵",
    "title": "TCGA",
    "section": "",
    "text": "Show the codematrix = data.frame(matrix(nrow=60660,ncol=0))\n\n\nfor (i in 1:length(count_file)) {\n    path = paste0('data/gdc_download_20240704_131631.625023/',\n                  count_file[i])\n    data &lt;- read_tsv(path, col_names = T, skip = 1)\n    data &lt;- data[-c(1:4), c(1, 4)] |&gt; column_to_rownames(var = \"gene_id\")  #取出ESEMBL_id列1 和 unstranded列 4，即count数据，对应其它数据，第2列为gene symbol\n    colnames(data) &lt;- file_sample$sample_id[which(file_sample$file_name == count_file_name[i])]\n    \n    matrix &lt;- cbind(matrix, data)\n}\nwrite.csv(matrix,'data/COUNT_matrix.csv',row.names = TRUE)"
  },
  {
    "objectID": "posts/TCGA/TCGA.html#normal-和-tumor",
    "href": "posts/TCGA/TCGA.html#normal-和-tumor",
    "title": "TCGA",
    "section": "",
    "text": "根据TCGA样本的命名可以区分正常组织和肿瘤样本的测序结果 其中 14、15位置编号大于10 表示正常\n\nShow the codeCOUNT_matrix &lt;- read_csv('data/COUNT_matrix.csv') |&gt; column_to_rownames(var = \"...1\")\n\n\nstr_sub(colnames(COUNT_matrix),14,15) |&gt; table()\n\n\n 01  02  11 \n481   2  53"
  },
  {
    "objectID": "posts/TCGA/TCGA.html#表型矩阵",
    "href": "posts/TCGA/TCGA.html#表型矩阵",
    "title": "TCGA",
    "section": "",
    "text": "Show the codejson &lt;- jsonlite::fromJSON(\"data/metadata.cart.2024-07-04.json\")\n\nentity_submitter_id &lt;- sapply(json$associated_entities,function(x){x[,1]})\ncase_id &lt;- sapply(json$associated_entities,function(x){x[,3]})\nsample_case &lt;- t(rbind(entity_submitter_id,case_id)) |&gt; as_tibble()\n\nclinical &lt;- read.delim('data/clinical.cart.2024-07-04/clinical.tsv',header = T)\n\nclinical &lt;- clinical |&gt; distinct(case_id,.keep_all = TRUE)\n\n\n\n\n\nclinical_matrix &lt;- left_join(sample_case,clinical,by = join_by(case_id))\n\nclinical_matrix &lt;- clinical_matrix |&gt; select(-case_id)"
  },
  {
    "objectID": "posts/TCGA/TCGA.html#mirna-计数矩阵",
    "href": "posts/TCGA/TCGA.html#mirna-计数矩阵",
    "title": "TCGA",
    "section": "",
    "text": "Show the codejson &lt;- jsonlite::fromJSON(\"metadata.cart.2022-09-27.json\")\n\n#id &lt;- json$associated_entities[[1]][,1]\nsample_id &lt;- sapply(json$associated_entities,function(x){x[,1]})\nfile_sample &lt;- data.frame(sample_id,file_name=json$file_name)  \n\n#获取gdc_download文件夹下的所有miRNA表达文件的 路径+文件名\ncount_file &lt;- list.files('gdc_download_20220927_150057.906231',pattern = '*quantification.txt',recursive = TRUE)\n#在count_file中分割出文件名\ncount_file_name &lt;- strsplit(count_file,split='/')\ncount_file_name &lt;- sapply(count_file_name,function(x){x[2]})\n\nmatrix = data.frame(matrix(nrow=1881,ncol=0))\nfor (i in 1:length(count_file)){\n  path = paste0('gdc_download_20220927_150057.906231//',count_file[i])\n  data&lt;- read.delim(path,fill = TRUE,header = T,row.names = 1)\n  data &lt;- data[1]   #取出count列（第1列），rpm列（第2列）\n  colnames(data) &lt;- file_sample$sample_id[which(file_sample$file_name==count_file_name[i])]\n  matrix &lt;- cbind(matrix,data)\n}"
  },
  {
    "objectID": "posts/TCGA/TCGA.html#tcgaworkflow",
    "href": "posts/TCGA/TCGA.html#tcgaworkflow",
    "title": "TCGA",
    "section": "",
    "text": "https://bioconductor.org/packages/release/workflows/html/TCGAWorkflow.html"
  },
  {
    "objectID": "posts/iterated function system/iterated function system.html",
    "href": "posts/iterated function system/iterated function system.html",
    "title": "iterated function system",
    "section": "",
    "text": "Art code\n\nShow the codelibrary(Rcpp)\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(ggthemes)\nlibrary(tictoc)\n\n\n\nShow the codefern_transform &lt;- function(coord, ind) {\n  \n  # coefficients for the stem function f_1\n  if(ind == 1) {\n    mat &lt;- matrix(c(0, 0, 0, .16), 2, 2) # matrix to multiply\n    off &lt;- c(0, 0)                       # offset vector to add\n  }\n  \n  # coefficients for the small leaflet function f_2\n  if(ind == 2) {\n    mat &lt;- matrix(c(.85, -.04, .04, .85), 2, 2)\n    off &lt;- c(0, 1.6)                      \n  }\n  # coefficients for the right-side function f_3\n  if(ind == 3) {\n    mat &lt;- matrix(c(.2, .23, -.26, .22), 2, 2)\n    off &lt;- c(0, 1.6)                      \n  }\n  \n  # coefficients for the left-side function f_4\n  if(ind == 4) {\n    mat &lt;- matrix(c(-.15, .26, .28, .24), 2, 2)\n    off &lt;- c(0, .44)                     \n  }\n  \n  # return the affine transformed coords\n  coord &lt;- mat %*% coord + off\n  return(coord)\n}\n\n\n\nShow the codefern_chaos &lt;- function(iterations = 10000, seed = NULL) {\n  if(!is.null(seed)) set.seed(seed)\n  \n  # which transformation to apply at each iteration\n  transform_index &lt;- sample(\n    x = 1:4, \n    size = iterations, \n    replace= TRUE, \n    prob = c(.01, .85, .07, .07)\n  )\n  \n  # initialise chaos game at the origin\n  start &lt;- matrix(c(0, 0))\n  \n  # helper function to collapse accumulated output\n  bind_to_column_matrix &lt;- function(lst) {\n    do.call(cbind, lst)\n  }\n  \n  # iterate until done!\n  coord_matrix &lt;- transform_index |&gt;\n    accumulate(fern_transform, .init = start) |&gt;\n    bind_to_column_matrix() \n  \n  # tidy the output, add extra columns, and return\n  coord_df &lt;- t(coord_matrix) |&gt; \n    as.data.frame() \n  names(coord_df) &lt;- c(\"x\", \"y\")\n  coord_df &lt;- coord_df |&gt;\n    as_tibble() |&gt;\n    mutate(\n      transform = c(0, transform_index),\n      iteration = row_number() - 1\n    )\n  return(coord_df)\n}\n\n\n\nShow the codefern_dat &lt;- fern_chaos(seed = 1)\nfern_dat %&gt;% head()\n\n# A tibble: 6 × 4\n       x     y transform iteration\n   &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1  0      0            0         0\n2  0      1.6          2         1\n3  0.064  2.96         2         2\n4  0.173  4.11         2         3\n5 -1.03   2.54         3         4\n6 -0.778  3.80         2         5\n\n\n\nShow the codeggplot(fern_dat, aes(x, y)) +\n  geom_point(colour = \"yellow\", size = 1, stroke = 0) +\n  coord_equal() +\n  theme_void()\n\n\n\n\n\n\n\n\nShow the codeggplot(fern_dat, aes(x, y, colour = iteration)) +\n  geom_point(size = 1, stroke = 0, show.legend = FALSE) +\n  coord_equal() +\n  theme_void()"
  },
  {
    "objectID": "posts/ggpattern/ggpattern.html",
    "href": "posts/ggpattern/ggpattern.html",
    "title": "ggpattern: ggplot2 with geometric texture amd images",
    "section": "",
    "text": "ggpattern 填充几何纹理或图像"
  },
  {
    "objectID": "posts/ggpattern/ggpattern.html#先决条件",
    "href": "posts/ggpattern/ggpattern.html#先决条件",
    "title": "ggpattern: ggplot2 with geometric texture amd images",
    "section": "先决条件",
    "text": "先决条件\n\nShow the codelibrary(ggplot2)\nlibrary(patchwork)\nlibrary(ggpattern)\nlibrary(gridpattern)\n\n\n\nShow the codeset.seed(123)\ndf &lt;- tibble(\n    group = letters[1:5],\n    value = round(runif(5,min = 10,max = 100),digits = 0)\n)\n\ndf %&gt;% \n    ggplot(mapping = aes(x = group, y = value, fill = group)) +\n    geom_col()"
  },
  {
    "objectID": "posts/ggpattern/ggpattern.html#ggpattern",
    "href": "posts/ggpattern/ggpattern.html#ggpattern",
    "title": "ggpattern: ggplot2 with geometric texture amd images",
    "section": "ggpattern",
    "text": "ggpattern\n几何纹理\n\nShow the codenames_magick_stripe\n\n [1] \"crosshatch\"    \"crosshatch30\"  \"crosshatch45\"  \"horizontal\"   \n [5] \"horizontal2\"   \"horizontal3\"   \"hs_bdiagonal\"  \"hs_cross\"     \n [9] \"hs_diagcross\"  \"hs_fdiagonal\"  \"hs_horizontal\" \"hs_vertical\"  \n[13] \"left30\"        \"left45\"        \"right30\"       \"right45\"      \n[17] \"vertical\"      \"vertical2\"     \"vertical3\"    \n\nShow the codenames_hex\n\n[1] \"hex\"      \"hex1\"     \"hex2\"     \"hex3\"     \"hex_skew\"\n\nShow the codenames_pattern\n\n [1] \"ambient\"         \"circle\"          \"crosshatch\"      \"fill\"           \n [5] \"gradient\"        \"image\"           \"magick\"          \"none\"           \n [9] \"pch\"             \"placeholder\"     \"plasma\"          \"polygon_tiling\" \n[13] \"regular_polygon\" \"rose\"            \"stripe\"          \"text\"           \n[17] \"wave\"            \"weave\"          \n\n\n 'stripe' (default), 'crosshatch', 'pch', 'circle', 'none'\n\nShow the codep1 &lt;- ggplot(df, aes(group, value )) +\n  geom_col_pattern(pattern = \"stripe\", \n                   fill= \"white\",  # 条形背景色 \n                   color=\"red\",    # 条形边框色\n                   pattern_fill = \"skyblue\", # 几何纹理填充色\n                   pattern_colour=\"darkgreen\",\n                   pattern_angle =30,    # 旋转角度\n                   pattern_linetype= 3 ,# 笔划stroke 线型\n                   pattern_size= 1.2,   #笔画线宽\n                   ) +\n    ggtitle(\"线条：stripe\")\n\np2 &lt;- ggplot(df, aes(group, value )) +\n  geom_col_pattern(pattern = \"crosshatch\", \n                   fill= \"white\",  # 条形背景色 \n                   color=\"red\",    # 条形边框色\n                   pattern_fill = \"red\", # 几何纹理填充色\n                   pattern_colour=\"green\",\n                   pattern_angle =30 ,  # 角度\n                   pattern_spacing= 0.2\n                   ) +\n    ggtitle(\"交叉平行线：crosshatch\")\n\n\np3 &lt;- ggplot(df, aes(group, value )) +\n  geom_col_pattern(pattern = \"pch\",\n                   fill= \"white\",  # 条形背景色 \n                   color=\"red\",    # 条形边框色\n                   pattern_colour=\"green\",\n                   pattern_angle =30,  \n                   pattern_density = 1,\n                   ) +\n    ggtitle(\"点：pch\")\n\np4 &lt;- ggplot(df, aes(group, value )) +\n  geom_col_pattern(pattern = \"circle\",\n                   fill= \"white\",  # 条形背景色 \n                   color=\"red\",    # 条形边框色\n                   pattern_colour=\"darkgreen\",\n                   pattern_fill = \"skyblue\",\n                   pattern_angle =30,   # 角度\n                   pattern_density = 1,\n                   pattern_spacing= 0.2, # 间距\n                   ) +\n    ggtitle(\"圈：circle\")\n\n(p1+p2)/(p3+p4)\n\n\n\n\n\n\n\n波浪图案\n\nShow the codex_hex &lt;- 0.5 + 0.5 * cos(seq(2 * pi / 4, by = 2 * pi / 6, length.out = 6))\ny_hex &lt;- 0.5 + 0.5 * sin(seq(2 * pi / 4, by = 2 * pi / 6, length.out = 6))\ngrid::grid.newpage()\nwave_sine &lt;- grid.pattern_wave(x_hex, y_hex, colour = \"black\", type = \"sine\",\n                  fill = c(\"red\", \"blue\"), density = 0.4,\n                  spacing = 0.15, angle = 0,\n                  amplitude = 0.05, frequency = 1 / 0.20)\n\n\n\n\n\n\nShow the code# zig-zag pattern is a wave of \"type = triangle\"\ngrid::grid.newpage()\nwave_triangle &lt;- grid.pattern_wave(x_hex, y_hex, colour = \"black\", \n                                   type = \"triangle\",\n                    fill = c(\"red\", \"blue\"), density = 0.4,\n                    spacing = 0.15, angle = 0, amplitude = 0.075)\n\n\n\n\n\n\n\n编织类型\npattern_type= ,\npattern_subtype=\n\nShow the codenames_weave\n\n [1] \"basket\"            \"matt\"              \"matt_irregular\"   \n [4] \"plain\"             \"rib_warp\"          \"satin\"            \n [7] \"twill\"             \"twill_elongated\"   \"twill_herringbone\"\n[10] \"twill_zigzag\"     \n\n\n\nShow the codeggplot(df, aes(group, value)) +\n  geom_col_pattern(\n    aes(pattern_fill2=group, pattern_type=group),\n    pattern = 'weave',\n    colour = 'black', \n    pattern_density = 1.0,\n    pattern_fill = 'grey',\n    pattern_key_scale_factor = 0.5,\n  ) +\n  theme_bw() +\n  labs(title = \"Some 'weave' types\") + \n  scale_pattern_type_manual(values=c('plain','matt', 'twill_herringbone',\n                                     \"twill_zigzag\",'satin')) +\n  theme(legend.key.size = unit(1.5, 'cm'))\n\n\n\n\n\n\n\n混合模式\n\nShow the codeggplot(df, aes(group, value)) +\n  geom_col_pattern(aes(fill=group, pattern=group, pattern_type=group),colour='black') + \n  theme_bw() +\n  labs(title = \"Use 'stripe' and 'weave' patterns\") + \n  theme(legend.key.size = unit(1.5, 'cm')) +\n  scale_pattern_manual(values=c('stripe', 'weave', 'weave','stripe', 'weave')) +\n  scale_pattern_type_manual(values=c(NA, 'basket', 'matt', NA, 'twill_elongated'))\n\n\n\n\n\n\n\n\nShow the codelibrary(ggplot2)\nlibrary(ggpattern)\nToothGrowth$dose &lt;- factor(ToothGrowth$dose)\nggplot(ToothGrowth, aes(dose)) +\n    geom_bar_pattern(\n        aes(\n            fill = dose,\n            pattern = dose,\n            pattern_type = dose\n        ),\n        pattern_frequency = 5,\n        colour = 'black'\n    ) +\n    theme_bw() +\n    labs(title = \"Use 'stripe' and 'wave' patterns\") +\n    theme(legend.key.size = unit(1.5, 'cm')) +\n    scale_pattern_manual(values = c('stripe', 'wave', 'wave')) +\n    scale_pattern_type_manual(values = c(NA, 'triangle', 'sine'))"
  },
  {
    "objectID": "posts/ggpattern/ggpattern.html#ggpattern-ggh4x",
    "href": "posts/ggpattern/ggpattern.html#ggpattern-ggh4x",
    "title": "ggpattern: ggplot2 with geometric texture amd images",
    "section": "ggpattern + ggh4x",
    "text": "ggpattern + ggh4x\n\nShow the codelibrary(tidyverse)\nlibrary(ggh4x)\nlibrary(ggpattern)\n\nset.seed(233)\ntable1 &lt;- tibble(\n  x=letters[1:4] %&gt;% rep(each=16,length.out=192),\n  y=abs(rnorm(192,50,10)),\n  f=LETTERS[1:4] %&gt;% rep(each=4,length.out=192),\n  g=\"g1\"\n)\ntable2 &lt;- tibble(\n  x=letters[1:4] %&gt;% rep(each=16,length.out=192),\n  y=abs(rnorm(192,50,10)) %&gt;% sort(),\n  f=LETTERS[1:4] %&gt;% rep(each=4,length.out=192),\n  g=\"g2\"\n)\ntable3 &lt;- tibble(\n  x=letters[1:4] %&gt;% rep(each=16,length.out=192),\n  y=abs(rnorm(192,50,10)),\n  f=LETTERS[1:4] %&gt;% rep(each=4,length.out=192),\n  g=\"g3\"\n)\n\ntableAll &lt;- bind_rows(table1,table2,table3)\n\np1 &lt;- tableAll %&gt;% ggplot(aes(interaction(x, g),y,pattern=f)) +\n  stat_summary(geom=GeomColPattern,\n               fun = mean,\n               position = position_dodge(width = 1.2),\n               pattern_spacing = 0.025,\n               fill = 'white', \n               colour = 'black',) + \n  stat_summary(geom=\"errorbar\",\n               fun.data = mean_se,\n               position = position_dodge(width = 1.2)) + \n  scale_x_manual(values = c(1:4+seq(0,1,length.out=4),6:9+1+seq(0,1,length.out=4),11:14+2+seq(0,1,length.out=4)),guide = guide_axis_nested()) +\n  scale_y_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,80,by=10),) +\n  labs(x=NULL,y=NULL,pattern=NULL) +\n  guides(pattern=guide_legend(nrow = 1)) +\n  coord_cartesian(ylim = c(0,70)) +\n  theme_classic() + \n  theme(legend.position = \"inside\",\n        legend.position.inside = c(.83,.95),\n        axis.ticks.length.x = unit(0,\"mm\"),\n        axis.ticks.length.y = unit(-1,\"mm\"),\n        ggh4x.axis.nestline = element_line(color=NA))\np1"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "博客"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HomePage",
    "section": "",
    "text": "Nature Methods: Propensity score matching\n\n\n\n\n\n\npropensity score\n\n\n\n\n\n\n\n\n\nOct 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nZotero\n\n\n\n\n\n\n文献管理\n\n\nZotero\n\n\n\n\n\n\n\n\n\nOct 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nggprism: GraphPad Prism 风格\n\n\n\n\n\n\ngraphics\n\n\nthemes\n\n\nggplot2 extension\n\n\n\n\n\n\n\n\n\nSep 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nggpattern: ggplot2 with geometric texture amd images\n\n\n\n\n\n\ngraphics\n\n\nggplot2 extension\n\n\n\n\n\n\n\n\n\nSep 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nggforce: 圆角柱状图\n\n\n\n\n\n\ngraphics\n\n\nggplot2 extension\n\n\n\n\n\n\n\n\n\nSep 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nUCSC\n\n\n\n\n\n\nbioinformatics\n\n\ndatabase\n\n\n\n\n\n\n\n\n\nSep 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTCGA\n\n\n\n\n\n\nbioinformatics\n\n\ndatabase\n\n\n\n\n\n\n\n\n\nSep 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nRT-qPCR\n\n\n\n\n\n\nbioinformatics\n\n\nprotocols\n\n\n\n\n\n\n\n\n\nSep 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\niterated function system\n\n\n\n\n\n\ngraphics\n\n\nart\n\n\n\n\n\n\n\n\n\nSep 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nwelcome\n\n\n\n\n\n\n\n\n\nSep 23, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ggprism/ggprism.html",
    "href": "posts/ggprism/ggprism.html",
    "title": "ggprism: GraphPad Prism 风格",
    "section": "",
    "text": "GraphPad Prism 的风格"
  },
  {
    "objectID": "posts/ggprism/ggprism.html#先决条件",
    "href": "posts/ggprism/ggprism.html#先决条件",
    "title": "ggprism: GraphPad Prism 风格",
    "section": "先决条件",
    "text": "先决条件\n\nShow the code# install.packages(\"ggprism\")\nlibrary(ggprism)\nlibrary(patchwork)\nToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)\n\n\n\nShow the codenames(ggprism_data$themes)\n\n [1] \"autumn_leaves\"   \"beer_and_ales\"   \"black_and_white\" \"candy_bright\"   \n [5] \"candy_soft\"      \"colorblind_safe\" \"colors\"          \"diazo\"          \n [9] \"earth_tones\"     \"evergreen\"       \"greenwash\"       \"muted_rainbow\"  \n[13] \"office\"          \"purple_passion\"  \"shades_of_gray\"  \"summer\"         \n[17] \"the_blues\"       \"winter_soft\"     \"stained_glass\"   \"warm_pastels\"   \n[21] \"flames\"          \"floral\"          \"inferno\"         \"magma\"          \n[25] \"mustard_field\"   \"neon\"            \"pastels\"         \"pearl\"          \n[29] \"plasma\"          \"prism_dark\"      \"prism_light\"     \"quiet\"          \n[33] \"spring\"          \"starry\"          \"viridis\"         \"waves\"          \n[37] \"blueprint\"       \"fir\"             \"ocean\"           \"sunny_garden\"   \n[41] \"wool_muffler\"    \"warm_and_sunny\"  \"winter_bright\"   \"all_null\"       \n\nShow the codepreview_theme(\"colors\")\n\n\n\n\n\n\n\n\nShow the codelengths(ggprism_data$colour_palettes)\n\n  autumn_leaves   beer_and_ales black_and_white       blueprint      blueprint2 \n              9               9               9               9               9 \n     blueprint3    candy_bright      candy_soft colorblind_safe          colors \n              9               9               9               6              20 \n          diazo     earth_tones       evergreen             fir            fir2 \n              9              10               9               9               9 \n           fir3          flames         flames2          floral         floral2 \n              9               9               9              12              12 \n      greenwash         inferno           magma   mustard_field  mustard_field2 \n             10               6               6               9               9 \n  muted_rainbow            neon           ocean          ocean2          ocean3 \n             10               9               9               9               9 \n         office         pastels           pearl          pearl2          plasma \n              9               9               6               6               6 \n     prism_dark     prism_dark2     prism_light    prism_light2  purple_passion \n             10              10              10              10               9 \n          quiet          quiet2  shades_of_gray          spring         spring2 \n              9               9               9               9               9 \n  stained_glass  stained_glass2          starry         starry2          summer \n              9               9               5               5              10 \n   sunny_garden   sunny_garden2   sunny_garden3       the_blues         viridis \n              9               9               9               9               6 \n warm_and_sunny    warm_pastels   warm_pastels2           waves          waves2 \n              9               9               9               5               5 \n  winter_bright     winter_soft    wool_muffler   wool_muffler2   wool_muffler3 \n              9               9               9               9               9"
  },
  {
    "objectID": "posts/ggprism/ggprism.html#ggprism",
    "href": "posts/ggprism/ggprism.html#ggprism",
    "title": "ggprism: GraphPad Prism 风格",
    "section": "ggprism",
    "text": "ggprism\n散点图\n\nShow the codep1 &lt;- ggplot(msleep[complete.cases(msleep), ], \n             aes(x = sleep_rem, y = sleep_total)) + \n  geom_point(aes(shape = factor(vore)), size = 3) + \n  theme_prism() + \n  theme(axis.title.y = element_blank())\n\np2 &lt;- p1 + scale_shape_prism()\n\np1 + p2\n\n\n\n\n\n\n\n柱状图\n\nShow the codep1 &lt;- ggplot(ToothGrowth, aes(x = dose, y = len)) + \n  stat_summary(aes(fill = dose),\n               geom = \"col\", fun = mean, colour = \"black\", linewidth = 0.9) + \n  scale_y_continuous(limits = c(0, 30), expand = c(0, 0))\n\np2 &lt;- p1 + theme_prism(base_size = 14)\n\np1 + p2\n\n\n\n\n\n\n\n箱线图\n\nShow the codep &lt;- ggplot(ToothGrowth, aes(x = supp, y = len)) + \n  geom_boxplot(aes(colour = supp, fill = supp)) + \n  theme_prism(base_size = 12)\n\np1 &lt;- p + scale_colour_prism(palette = \"floral\") + \n  scale_fill_prism(palette = \"floral\")\n\np2 &lt;- p + scale_colour_prism(palette = \"flames\") + \n  scale_fill_prism(palette = \"flames\")\n\np1 + p2\n\n\n\n\n\n\n\n小提琴图\n\nShow the codep_vals &lt;- tibble::tribble(\n  ~group1, ~group2, ~p.adj,   ~y.position,\n  \"0.5\",   \"1\",     8.80e-14, 35,\n  \"0.5\",   \"2\",     1.27e-7,  39\n)\n\n\np1 &lt;- ggplot(ToothGrowth, aes(x = dose, y = len)) + \n  geom_violin(aes(colour = dose, fill = dose), trim = FALSE) + \n  geom_boxplot(aes(fill = dose), width = 0.2, colour = \"black\") + \n  scale_y_continuous(limits = c(-5, 40))+\n    add_pvalue(p_vals, label = \"p = {p.adj}\", tip.length = 0, label.size = 4)\n\n\np2 &lt;- p1 + \n  scale_color_prism(\"floral\") + \n  scale_fill_prism(\"floral\") + \n  theme_prism(base_size = 12) + \n  theme(legend.position = \"none\") + \n  add_pvalue(p_vals, label = \"p = {p.adj}\", tip.length = 0, label.size = 4)\n\n\np1+p2\n\n\n\n\n\n\n\n轴\n\nShow the codep &lt;- ggplot(ToothGrowth, aes(x = dose, y = len)) + \n  geom_jitter(aes(shape = dose), width = 0.2, size = 2) + \n  scale_shape_prism() + \n  theme_prism() + \n  theme(legend.position = \"none\")\n\np1 &lt;- p + scale_y_continuous(limits = c(0, 40), guide = \"prism_minor\")\n\np2 &lt;- p + scale_x_discrete(guide = \"prism_bracket\") + \n  scale_y_continuous(limits = c(0, 40))\n\np3 &lt;- p + scale_y_continuous(limits = c(0, 40), guide = \"prism_offset\")\n\np4 &lt;- p + scale_y_continuous(limits = c(0, 40), guide = \"prism_offset_minor\")\n\n(p1 + p2) / (p3 + p4)\n\n\n\n\n\n\n\n不连续轴\n\nShow the code# multiply one of the len values by 100\ntg &lt;- ToothGrowth\ntg[2, \"len\"] &lt;- tg[2, \"len\"] * 100\n\n\nggplot(tg, aes(x = dose, y = len)) + \n  geom_jitter(aes(shape = dose), width = 0.2, size = 2) + \n  scale_shape_prism() + \n  theme_prism() + \n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nShow the codep_bottom &lt;- ggplot(tg, aes(x = dose, y = len)) + \n  geom_jitter(aes(shape = dose), width = 0.2, size = 2) + \n  scale_shape_prism() + \n  coord_cartesian(ylim = c(0, 60)) + \n  guides(x = \"prism_bracket\", y = \"prism_offset_minor\") + \n  theme_prism() + \n  theme(legend.position = \"none\")\n\np_bottom\n\n\n\n\n\n\n\n\nShow the codep_top &lt;- ggplot(tg, aes(x = dose, y = len)) + \n  geom_jitter(aes(shape = dose), width = 0.2, size = 2) + \n  scale_shape_prism() + \n  coord_cartesian(ylim = c(1140, 1160)) +\n  scale_y_continuous(breaks = c(1140, 1160)) +\n  guides(y = \"prism_offset_minor\")\n\ntheme_outlier &lt;- function(palette = \"black_and_white\",\n                          base_size = 14,\n                          base_family = \"sans\",\n                          base_fontface = \"bold\",\n                          base_line_size = base_size/14,\n                          base_rect_size = base_size/14,\n                          axis_text_angle = 0,\n                          border = FALSE) {\n  theme_prism(palette = palette,\n              base_size = base_size,\n              base_family = base_family,\n              base_fontface = base_fontface,\n              base_line_size = base_line_size,\n              base_rect_size = base_rect_size,\n              axis_text_angle = axis_text_angle,\n              border = border) %+replace% \n    theme(axis.title = element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.line.x = element_blank(),\n          legend.position = \"none\")\n}\n\np_top &lt;- p_top + theme_outlier()\np_top\n\n\n\n\n\n\nShow the codep_top / p_bottom + \n  plot_layout(heights = c(1, 4)) & \n  theme(axis.text.y = element_text(colour = \"red\"))\n\n\n\n\n\n\n\np值\n\nShow the code# create a jitter plot of the sleep data set\n# and indicate the means\np &lt;- ggplot(sleep, aes(x = group, y = extra)) +\n  geom_jitter(aes(shape = group), width = 0.1) + \n  stat_summary(geom = \"crossbar\", fun = mean, colour = \"red\", width = 0.2) + \n  theme_prism() + \n  theme(legend.position = \"none\")\np\n\n\n\n\n\n\n\n\nShow the coderesult &lt;- t.test(extra ~ group, data = sleep)$p.value\nresult &lt;- signif(result, digits = 3)\nresult\n\n[1] 0.0794\n\nShow the codedf_p_val &lt;- data.frame(\n  group1 = \"1\",\n  group2 = \"2\",\n  label = result,\n  y.position = 6\n)\n\n\n\nShow the codecolnames(df_p_val) &lt;- c(\"apple\", \"banana\", \"some_label\", \"some_y_position\")\n\n# add p-value brackets again\np + add_pvalue(df_p_val,\n                     xmin = \"apple\",\n                     xmax = \"banana\",\n                     label = \"some_label\",\n                     y.position = \"some_y_position\")\n\n\n\n\n\n\n\n\nShow the codecolnames(df_p_val) &lt;- c(\"group1\", \"group2\", \"label\", \"y.position\")\n# change bracket and label aesthetics\np1 &lt;- p + add_pvalue(df_p_val,\n                     colour = \"red\", # label\n                     label.size = 8, # label\n                     fontface = \"bold\", # label\n                     fontfamily = \"serif\", # label\n                     angle = 45, # label\n                     hjust = 1, # label\n                     vjust = 2, # label\n                     bracket.colour = \"blue\", # bracket\n                     bracket.size = 1, # bracket\n                     linetype = \"dashed\", # bracket\n                     lineend = \"round\") # bracket\n\n# use glue expression for label\np2 &lt;- p + add_pvalue(df_p_val, label = \"p = {label}\")\n\n# make bracket tips longer and use coord_flip\np3 &lt;- p + add_pvalue(df_p_val, tip.length = 0.15, coord.flip = TRUE) + \n  coord_flip()\n\n# change bracket tips independently\n# (make one side disappear and the other longer)\np4 &lt;- p + add_pvalue(df_p_val, tip.length = c(0.2, 0))\n\n(p1 + p2) / (p3 + p4)\n\n\n\n\n\n\n\n+ rstatix\n\n\nShow the codep &lt;- ggplot(ToothGrowth, aes(x = dose, y = len)) +\n  geom_boxplot(aes(fill = dose), colour = \"black\") + \n  theme_prism() + \n  theme(legend.position = \"none\")\n\ndf_p_val &lt;- rstatix::t_test(ToothGrowth, len ~ dose, ref.group = \"0.5\") %&gt;% \n  rstatix::add_xy_position()\n\np + add_pvalue(df_p_val, \n               label = \"p = {p.adj}\",\n               remove.bracket = TRUE)"
  },
  {
    "objectID": "posts/RT-qPCR/RT-qPCR.html",
    "href": "posts/RT-qPCR/RT-qPCR.html",
    "title": "RT-qPCR",
    "section": "",
    "text": "RT-qPCR\nhttps://bioconductor.org/packages/3.19/bioc/html/ReadqPCR.html"
  },
  {
    "objectID": "posts/UCSC/UCSC.html",
    "href": "posts/UCSC/UCSC.html",
    "title": "UCSC",
    "section": "",
    "text": "UCSC\nrtracklayer"
  },
  {
    "objectID": "posts/圆角柱状图/angle_rounded_barplot.html",
    "href": "posts/圆角柱状图/angle_rounded_barplot.html",
    "title": "ggforce: 圆角柱状图",
    "section": "",
    "text": "圆角的柱状图"
  },
  {
    "objectID": "posts/圆角柱状图/angle_rounded_barplot.html#先决条件",
    "href": "posts/圆角柱状图/angle_rounded_barplot.html#先决条件",
    "title": "ggforce: 圆角柱状图",
    "section": "先决条件",
    "text": "先决条件\n\nShow the codelibrary(ggforce)"
  },
  {
    "objectID": "posts/圆角柱状图/angle_rounded_barplot.html#geom_shape",
    "href": "posts/圆角柱状图/angle_rounded_barplot.html#geom_shape",
    "title": "ggforce: 圆角柱状图",
    "section": "geom_shape()",
    "text": "geom_shape()\n连续X\n\nShow the codeshape &lt;- data.frame(\n  x = c(0.25, 0.75,0.75,0.25),\n  y = c(0, 0,1,1)\n)\n\nggplot(shape, aes(x = x, y = y)) +\n  #geom_polygon(fill = 'red') +\n  geom_shape(radius = unit(0.5, 'cm'))+\n    scale_x_continuous(breaks = seq(0,2,1), limits = c(0,2))\n\n\n\n\n\n\n\n分类X\n\nShow the codedf &lt;- data.frame(trt = c(\"a\", \"b\", \"c\"), outcome = c(2.3, 1.9, 3.2))\n\nwidth &lt;- .9\n\ndf &lt;- df |&gt;\n    mutate(trt = factor(trt)) |&gt;\n    dplyr::reframe(\n        data.frame(\n            x = rep(as.numeric(trt) + width / 2 * c(-1, 1), each = 2), # 指定条形图四个角的坐标\n            outcome = c(c(0, outcome), rev(c(0, outcome)))\n        ),\n        .by = trt\n    )\ndf\n\n   trt    x outcome\n1    a 0.55     0.0\n2    a 0.55     2.3\n3    a 1.45     2.3\n4    a 1.45     0.0\n5    b 1.55     0.0\n6    b 1.55     1.9\n7    b 2.45     1.9\n8    b 2.45     0.0\n9    c 2.55     0.0\n10   c 2.55     3.2\n11   c 3.45     3.2\n12   c 3.45     0.0\n\nShow the codeggplot(df, aes(x, outcome, fill = trt)) +\n    geom_shape(radius = .05)+\n    scale_x_continuous(breaks = 1:3,labels = c(\"a\",\"b\",\"c\"))+\n    theme(\n        axis.title.x = element_blank()\n    )\n\n\n\n\n\n\n\n\nShow the codelibrary(ggforce)\nggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n  geom_point() +\n  facet_zoom(x = Species == \"versicolor\")"
  },
  {
    "objectID": "posts/PSM/PSM_NatureMethods.html",
    "href": "posts/PSM/PSM_NatureMethods.html",
    "title": "Nature Methods: Propensity score matching",
    "section": "",
    "text": "Show the code# Simulate a study of bone density (bd) in a cohort of non-smokers and smokers.\n\ncohort_size = 1000\n\n# Bone density (bd) units g/cm^2 expressed as \"T score\" relative to young population. \n# https://www.researchgate.net/publication/259608747_Age-Related_Changes_in_the_Prevalence_of_Osteoporosis_according_to_Gender_and_Skeletal_Site_The_Korea_National_Health_and_Nutrition_Examination_Survey_2008-2010\n# https://www.chatswooddensitometry.com.au/bone-density-results.html\n# T = 0 corresponds to about 1.2 g/cm^2\n#\n#              -2.5         -1.0\n# &lt;--------------|------------|-----------&gt;\n#   osteoporosis   osteopenia   normal\n\nsmoking_bd_true_effect           = -0.5\nmax_individual_covariate_effect  = -0.5\n\n# \"treatment\" refers to membership in smoking group\n# covariate_effect - 0/1 - whether covariates impact bone density (for testing)\n# treatment_effect - 0/1 - whether smoking impacts bone density (for testing)\nmake_cohort = function(covariate_effect=0,treatment_effect=0,seed,n=cohort_size) {\nset.seed(seed)\nblood = tibble(\n  id      = 1:n,\n  #############################################################\n  # ALCOHOL\n  # g/day\n  # https://pophealthmetrics.biomedcentral.com/articles/10.1186/1478-7954-10-6/tables/2\n  # Distribution below from Table 2 (male, USA2)\n  # Min.  1st Qu.   Median     Mean  3rd Qu.     Max.    sd\n  # 0.0003   1.8410   7.5948  14.5125  19.2759 142.6630 19\n  alcohol = rgamma(cohort_size,scale=25.65,shape=0.53),\n  #############################################################\n  # STRESS\n  # perceived stress scale (PSS), 0-40\n  # https://www.slu.edu/medicine/family-medicine/pdfs/perceived-stress-scale.pdf\n  # Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    sd\n  # 0.5266  6.9912 11.6250 12.4698 16.8827 37.3044  7.0\n  stress_base  = bound(50*rbeta(cohort_size,2,6),c(0,40)),\n  #############################################################\n  # CAFFEINE\n  # mg/day\n  # https://www.ncbi.nlm.nih.gov/books/NBK202226/\n  # table 2-1 avg 165 90% 379\n  # Min.  1st Qu.  Median    Mean 3rd Qu.    Max.  90% \n  # 0.034  75.355 166.391 200.789 294.416 773.001  428\n  caffeine = 800*rbeta(cohort_size,1,3),\n) %&gt;% \n  mutate(\n         # +0.5 stress for each alcohol g/day (arbitrary increase)\n         # e.g. those in 75% of alcohol consumption drink 18 g/day = +9 stress ~ s.d. of stress distribution\n         alcohol_stress_effect = alcohol / 2,\n         stress = bound(stress_base + alcohol_stress_effect,c(0,40))) %&gt;%\n  mutate(bd_base             = rnorm(cohort_size,0,0.5),\n         bd_covariate_effect = max_individual_covariate_effect*(\n                                  rescale(stress,  to=c(0,1)) + \n                                  rescale(alcohol, to=c(0,1)) + \n                                  rescale(caffeine,to=c(0,1)))) %&gt;%\n  # Each covariate (arbitrarily) contributes equally to the treatment score\n  # based on subject's percentile value in the covariate's distribution.\n  # The score is then rescaled to a probability in the range [0,1], which is then used\n  # to generate assignment to control (treatment = 0) or treatment (treatment = 1) groups.\n  mutate(\n         treatment_score  = rescale(stress,  to=c(0,1)) + \n                            rescale(alcohol, to=c(0,1)) + \n                            rescale(caffeine,to=c(0,1)), \n         treatment_p      = rescale(treatment_score, to = c(0.1,0.9)),\n         treatment        = rbinom(cohort_size, 1, treatment_p)) %&gt;% \n  # Bone density\n  mutate(\n         # reduction in bd if subject is a smoker\n         bd_treatment_effect = treatment*smoking_bd_true_effect,\n         # final bd, including covariate effects (if toggled) and treatment effect (if toggled)\n         bd = bd_base + covariate_effect*bd_covariate_effect + treatment_effect*bd_treatment_effect)\n}\n\n# 1. Pick a seed\nseed = 20 \n# 2. Cohort A : no treatment or covariate effects\ncohort_a = make_cohort(seed=seed,covariate_effect=0,treatment_effect=0)\npsych::describeBy(stress + alcohol + caffeine + bd ~ treatment, data = cohort_a)\n\n\n Descriptive statistics by group \ntreatment: 0\n         vars   n   mean     sd median trimmed    mad   min    max  range skew\nstress      1 651  16.92   9.24  15.71   16.17   9.20  0.88  40.00  39.12 0.65\nalcohol     2 651  10.78  15.06   5.10    7.63   6.89  0.00 108.19 108.19 2.68\ncaffeine    3 651 180.24 145.66 140.32  163.46 144.68  0.22 693.09 692.87 0.89\nbd          4 651   0.03   0.51   0.03    0.03   0.53 -1.27   1.46   2.74 0.00\n         kurtosis   se\nstress      -0.10 0.36\nalcohol      9.34 0.59\ncaffeine     0.08 5.71\nbd          -0.36 0.02\n------------------------------------------------------------ \ntreatment: 1\n         vars   n   mean     sd median trimmed    mad   min    max  range  skew\nstress      1 349  21.46  10.47  20.48   21.18  12.20  0.62  40.00  39.38  0.21\nalcohol     2 349  18.47  23.38   9.47   13.97  12.96  0.00 142.97 142.97  2.30\ncaffeine    3 349 231.16 166.58 199.42  217.70 187.19  1.69 708.31 706.62  0.61\nbd          4 349   0.01   0.52  -0.02    0.01   0.56 -1.38   1.57   2.95 -0.01\n         kurtosis   se\nstress      -0.96 0.56\nalcohol      6.69 1.25\ncaffeine    -0.58 8.92\nbd          -0.27 0.03\n\nShow the code# 3. Cohort B : covariate effect, no treatment effect\ncohort_b = make_cohort(seed=seed,covariate_effect=1,treatment_effect=0)\npsych::describeBy(stress + alcohol + caffeine + bd ~ treatment, data = cohort_b)\n\n\n Descriptive statistics by group \ntreatment: 0\n         vars   n   mean     sd median trimmed    mad   min    max  range skew\nstress      1 651  16.92   9.24  15.71   16.17   9.20  0.88  40.00  39.12 0.65\nalcohol     2 651  10.78  15.06   5.10    7.63   6.89  0.00 108.19 108.19 2.68\ncaffeine    3 651 180.24 145.66 140.32  163.46 144.68  0.22 693.09 692.87 0.89\nbd          4 651  -0.34   0.55  -0.35   -0.34   0.59 -1.78   1.19   2.97 0.03\n         kurtosis   se\nstress      -0.10 0.36\nalcohol      9.34 0.59\ncaffeine     0.08 5.71\nbd          -0.28 0.02\n------------------------------------------------------------ \ntreatment: 1\n         vars   n   mean     sd median trimmed    mad   min    max  range  skew\nstress      1 349  21.46  10.47  20.48   21.18  12.20  0.62  40.00  39.38  0.21\nalcohol     2 349  18.47  23.38   9.47   13.97  12.96  0.00 142.97 142.97  2.30\ncaffeine    3 349 231.16 166.58 199.42  217.70 187.19  1.69 708.31 706.62  0.61\nbd          4 349  -0.48   0.57  -0.46   -0.48   0.61 -2.08   1.32   3.40 -0.01\n         kurtosis   se\nstress      -0.96 0.56\nalcohol      6.69 1.25\ncaffeine    -0.58 8.92\nbd          -0.19 0.03\n\nShow the code#hist(cohort$bp)\n# 4. Cohort C : covariate and treatment effects\ncohort_c = make_cohort(seed=seed,covariate_effect=1,treatment_effect=1)\npsych::describeBy(stress + alcohol + caffeine + bd ~ treatment, data = cohort_c)\n\n\n Descriptive statistics by group \ntreatment: 0\n         vars   n   mean     sd median trimmed    mad   min    max  range skew\nstress      1 651  16.92   9.24  15.71   16.17   9.20  0.88  40.00  39.12 0.65\nalcohol     2 651  10.78  15.06   5.10    7.63   6.89  0.00 108.19 108.19 2.68\ncaffeine    3 651 180.24 145.66 140.32  163.46 144.68  0.22 693.09 692.87 0.89\nbd          4 651  -0.34   0.55  -0.35   -0.34   0.59 -1.78   1.19   2.97 0.03\n         kurtosis   se\nstress      -0.10 0.36\nalcohol      9.34 0.59\ncaffeine     0.08 5.71\nbd          -0.28 0.02\n------------------------------------------------------------ \ntreatment: 1\n         vars   n   mean     sd median trimmed    mad   min    max  range  skew\nstress      1 349  21.46  10.47  20.48   21.18  12.20  0.62  40.00  39.38  0.21\nalcohol     2 349  18.47  23.38   9.47   13.97  12.96  0.00 142.97 142.97  2.30\ncaffeine    3 349 231.16 166.58 199.42  217.70 187.19  1.69 708.31 706.62  0.61\nbd          4 349  -0.98   0.57  -0.96   -0.98   0.61 -2.58   0.82   3.40 -0.01\n         kurtosis   se\nstress      -0.96 0.56\nalcohol      6.69 1.25\ncaffeine    -0.58 8.92\nbd          -0.19 0.03\n\nShow the code# Naive model that tests bp difference without accounting for covariates\nmeans  = cohort_c |&gt; group_by(treatment) |&gt; summarize(mean(bd))\neffect = as.numeric(means[2,2]-means[1,2])\neffect\n\n[1] -0.639786\n\nShow the code# Cohort A has no covariate or treatment effects. Both treated (smokers) and control (non-smokers)\n# should have the same distribution of bone density (bd)\np1 = ggplot() + geom_density(data=cohort_a |&gt; filter(treatment==T),aes(bd),color=palette[1]) +\n  geom_density(data=cohort_a |&gt; filter(treatment==F),aes(bd),color=\"black\") +\n  geom_vline(xintercept = cohort_a |&gt; filter(treatment==T) |&gt; select(bd) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_a |&gt; filter(treatment==F) |&gt; select(bd) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\n# The magnitude of the covariate effect.\np2 = ggplot() + geom_density(data=cohort_b |&gt; filter(treatment==T),aes(bd_covariate_effect),color=palette[1]) +\n  geom_density(data=cohort_b |&gt; filter(treatment==F),aes(bd_covariate_effect),color=\"black\") +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==T) |&gt; select(bd_covariate_effect) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==F) |&gt; select(bd_covariate_effect) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\n# Treatment probability.\np2b = ggplot() + geom_density(data=cohort_b |&gt; filter(treatment==T),aes(treatment_p),color=palette[1]) +\n  geom_density(data=cohort_b |&gt; filter(treatment==F),aes(treatment_p),color=\"black\") +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==T) |&gt; select(treatment_p) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==F) |&gt; select(treatment_p) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(0,1),breaks=seq(0,1,by=.2))\n  \n# Cohort B : covariate effect but no treatment effect\np3 = ggplot() + geom_density(data=cohort_b |&gt; filter(treatment==T),aes(bd),color=palette[1]) +\n  geom_density(data=cohort_b |&gt; filter(treatment==F),aes(bd),color=\"black\") +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==T) |&gt; select(bd) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==F) |&gt; select(bd) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\n# Cohort B : covariate and treatment effect\np4 = ggplot() + geom_density(data=cohort_c |&gt; filter(treatment==T),aes(bd),color=palette[1]) +\n  geom_density(data=cohort_c |&gt; filter(treatment==F),aes(bd),color=\"black\") +\n  geom_vline(xintercept = cohort_c |&gt; filter(treatment==T) |&gt; select(bd) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_c |&gt; filter(treatment==F) |&gt; select(bd) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p2b,aspect),plot_theme(p3,aspect),plot_theme(p4,aspect),cols=1)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig-distributions.pdf\",useDingbats=FALSE,width=5,height=3)\n\npng \n  2 \n\nShow the codecohort        = cohort_c\nmodel_matched = lm(bd ~ treatment, \n                    data = cohort_c)\nsummary(model_matched)\n\n\nCall:\nlm(formula = bd ~ treatment, data = cohort_c)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.60017 -0.40313  0.00176  0.39403  1.80181 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.34018    0.02179  -15.61   &lt;2e-16 ***\ntreatment   -0.63979    0.03689  -17.34   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.556 on 998 degrees of freedom\nMultiple R-squared:  0.2316,    Adjusted R-squared:  0.2309 \nF-statistic: 300.9 on 1 and 998 DF,  p-value: &lt; 2.2e-16\n\n\n\nShow the code# propensity score matching with replacement\nmatched_data = matchit(treatment ~ alcohol + stress + caffeine,\n                        data     = cohort,\n                        method   = \"nearest\",\n                        replace  = TRUE,\n                        caliper  = 0.1)\n\ncohort$w   = matched_data$weights\ncohort$ps  = matched_data$distance\ncohort$cat = 0\n\ncohort[cohort$w == 0 & cohort$treatment==F,]$cat=-2  # unmatched control\ncohort[cohort$w == 0 & cohort$treatment==T,]$cat=-1  # unmatched treat\ncohort[cohort$w &gt; 0  & cohort$treatment==F,]$cat=0   # matched   control\ncohort[cohort$w &gt; 0  & cohort$treatment==T,]$cat=1   # matched   treat\ncohort |&gt; count(cat)\n\n# A tibble: 4 × 2\n    cat     n\n  &lt;dbl&gt; &lt;int&gt;\n1    -2   416\n2    -1     5\n3     0   235\n4     1   344\n\n\n\nShow the codeaspect = 1/3 # for plots\n\n# full cohort\n# plot densities of alcohol, stress, caffine\n\nvarT = cohort|&gt;filter(treatment==T)|&gt;select(alcohol)\nvarF = cohort|&gt;filter(treatment==F)|&gt;select(alcohol)\np1 = ggplot() + \n    geom_density(data=varF,aes(alcohol),color=\"black\",size=1) +\n    geom_density(data=varT,aes(alcohol),color=palette[1],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,100)) +\n  scale_y_continuous(lim=c(0,0.1))\n\nvarT = cohort|&gt;filter(treatment==T)|&gt;select(stress)\nvarF = cohort|&gt;filter(treatment==F)|&gt;select(stress)\np2 = ggplot() + \n    geom_density(data=varF,aes(stress),color=\"black\",size=1) +\n    geom_density(data=varT,aes(stress),color=palette[1],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-5,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+5,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,40)) +\n  scale_y_continuous(lim=c(0,0.06))\n\nvarT = cohort|&gt;filter(treatment==T)|&gt;select(caffeine)\nvarF = cohort|&gt;filter(treatment==F)|&gt;select(caffeine)\np3 = ggplot() + \n    geom_density(data=varF,aes(caffeine),color=\"black\",size=1) +\n    geom_density(data=varT,aes(caffeine),color=palette[1],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) + \n    scale_x_continuous(lim=c(0,400),breaks=seq(0,400,by=50)) +\n    scale_y_continuous(lim=c(0,0.006))\n\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p3,aspect),cols=1)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig2a.pdf\",useDingbats=FALSE,width=5,height=3)\n\npng \n  2 \n\nShow the code# matched/unmatched\n# plot densities of alcohol, cholesterol, caffeine\n\nvarT   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==T)|&gt;select(alcohol)\nvarF   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==F)|&gt;select(alcohol)\nvarFun = cohort[matched_data$weights==0,]|&gt;filter(treatment==F)|&gt;select(alcohol)\np1 = ggplot() + \n    geom_density(data=varF,aes(alcohol),color=\"black\",size=1) +\n    geom_density(data=varT,aes(alcohol),color=palette[1],size=1) +\n    geom_density(data=varFun,aes(alcohol),color=palette[2],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    geom_vline(xintercept=varFun|&gt;as_vector()|&gt;mean(),color=palette[2]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varFun|&gt;as_vector()|&gt;mean()-1,y=0,label=varFun|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[2],size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,100)) +\n  scale_y_continuous(lim=c(0,0.1))\n\nvarT   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==T)|&gt;select(stress)\nvarF   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==F)|&gt;select(stress)\nvarFun = cohort[matched_data$weights==0,]|&gt;filter(treatment==F)|&gt;select(stress)\np2 = ggplot() + \n    geom_density(data=varF,aes(stress),color=\"black\",size=1) +\n    geom_density(data=varT,aes(stress),color=palette[1],size=1) +\n    geom_density(data=varFun,aes(stress),color=palette[2],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    geom_vline(xintercept=varFun|&gt;as_vector()|&gt;mean(),color=palette[2]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varFun|&gt;as_vector()|&gt;mean()-1,y=0,label=varFun|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[2],size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,40)) +\n  scale_y_continuous(lim=c(0,0.06))\n\nvarT   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==T)|&gt;select(caffeine)\nvarF   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==F)|&gt;select(caffeine)\nvarFun = cohort[matched_data$weights==0,]|&gt;filter(treatment==F)|&gt;select(caffeine)\np3 = ggplot() + \n    geom_density(data=varF,aes(caffeine),color=\"black\",size=1) +\n    geom_density(data=varT,aes(caffeine),color=palette[1],size=1) +\n    geom_density(data=varFun,aes(caffeine),color=palette[2],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    geom_vline(xintercept=varFun|&gt;as_vector()|&gt;mean(),color=palette[2]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varFun|&gt;as_vector()|&gt;mean()-1,y=0,label=varFun|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[2],size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n    scale_x_continuous(lim=c(0,400),breaks=seq(0,400,by=50)) +\n    scale_y_continuous(lim=c(0,0.006))\n\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p3,aspect),cols=1)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig2b.pdf\",useDingbats=FALSE,width=5,height=3)\n\npng \n  2 \n\n\n\nShow the codepdf(\"fig3a.pdf\")\nplot(matched_data, type = \"jitter\", interactive = FALSE)\ndev.off()\n\npng \n  2 \n\nShow the codepdf(\"fig3b.pdf\")\nlove.plot(matched_data, binary = \"std\")\ndev.off()\n\npng \n  2 \n\n\n\nShow the code# get the matched data set\nmatched_data_for_real = match.data(matched_data)\nmatched_data_for_real |&gt; nrow()\n\n[1] 579\n\nShow the code# new linear model with matched data\nmodel_matched = lm(bd ~ treatment, \n                    data = matched_data_for_real)\nsummary(model_matched)\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_for_real)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.6067 -0.3913  0.0018  0.3920  1.7953 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.42417    0.03647  -11.63   &lt;2e-16 ***\ntreatment   -0.54927    0.04732  -11.61   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5591 on 577 degrees of freedom\nMultiple R-squared:  0.1893,    Adjusted R-squared:  0.1879 \nF-statistic: 134.7 on 1 and 577 DF,  p-value: &lt; 2.2e-16\n\nShow the code# get the same result by comparing means\nmatched_data_for_real |&gt;\n  filter(treatment==T) |&gt;\n  summarize(blood_mean=mean(bd)) -\n  matched_data_for_real |&gt;\n  filter(treatment==F) |&gt;\n  summarize(blood_mean=mean(bd))\n\n  blood_mean\n1 -0.5492713\n\n\n\nShow the code# jitter plot of unmatched data (entire cohort)\nbd_min = -3\nbd_max = 1.5\np1 = ggplot(cohort, aes(x=treatment, y=bd)) +  \n  geom_jitter(width=0.2,shape=16,size=0.5) +\n  stat_summary(fun = \"mean\", geom = \"crossbar\", width = .5, color = \"orange\") +\n  annotate(\"text\", x = 0.25, y = 0, hjust=0,size=3,label = cohort |&gt; \n             filter(treatment==F) |&gt; \n             select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  annotate(\"text\", x = 1.25, y = 0, hjust=0,size=3,label = cohort |&gt; \n             filter(treatment==T) |&gt; \n             select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  scale_x_continuous(lim=c(-2.25,1.75))  +\n  scale_y_continuous(lim=c(bd_min,bd_max),breaks=seq(bd_min,bd_max,by=1))\n# jitter plot of matched data \np2 = ggplot(cohort, aes(x=cat, y=bd)) +  \n  geom_jitter(width=0.2,shape=16,size=0.5) +\n  stat_summary(fun = \"mean\", geom = \"crossbar\", width = .5, color = \"orange\") +\n  annotate(\"text\",x=-1.75,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==-2)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(1)) +\n  annotate(\"text\",x=-0.75,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==-1)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  annotate(\"text\",x=0.25,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==0)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  annotate(\"text\",x=1.25,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==1)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  scale_x_continuous(lim=c(-2.25,1.75)) +\n  scale_y_continuous(lim=c(bd_min,bd_max),breaks=seq(bd_min,bd_max,by=1))\n\n# linear model with weights\nmodel_matched_wts = lm(bd ~ treatment, \n                        data = matched_data_for_real,\n                        weights = weights)\nsummary(model_matched_wts)\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_for_real, weights = weights)\n\nWeighted Residuals:\n     Min       1Q   Median       3Q      Max \n-1.93615 -0.36786  0.01487  0.37422  1.79528 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.45059    0.03663   -12.3   &lt;2e-16 ***\ntreatment   -0.52286    0.04753   -11.0   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5616 on 577 degrees of freedom\nMultiple R-squared:  0.1734,    Adjusted R-squared:  0.1719 \nF-statistic:   121 on 1 and 577 DF,  p-value: &lt; 2.2e-16\n\nShow the codedata = matched_data_for_real \n# plot\nwmean_f = as.numeric(data|&gt;filter(treatment==F)|&gt;select(bd, weights) |&gt; summarize(weighted_mean=weighted.mean(bd, weights)))\nwmean_t = as.numeric(data|&gt;filter(treatment==T)|&gt;select(bd, weights) |&gt; summarize(weighted_mean=weighted.mean(bd, weights)))\np3 = ggplot(data, aes(x=treatment, y=bd)) +  \n  geom_jitter(width=0.2,shape=16,size=scales::rescale(matched_data_for_real$weights, to=c(0.25, 1.25))) +\n  annotate(\"segment\",x=-0.25,y = as.numeric(wmean_f), xend=0.25, yend = as.numeric(wmean_f), color=\"orange\")+\n  annotate(\"segment\",x=0.75,y = as.numeric(wmean_t), xend=1.25, yend = as.numeric(wmean_t), color=\"orange\")+\n  annotate(\"text\",x=0.25,y=wmean_f,hjust=0,size=3,label=wmean_f |&gt; round(2)) +\n  annotate(\"text\",x=1.25,y=wmean_t,hjust=0,size=3,label=wmean_t |&gt; round(2)) +\n  scale_x_continuous(lim=c(-2.25,1.75)) +\n  scale_y_continuous(lim=c(bd_min,bd_max),breaks=seq(bd_min,bd_max,by=1))\n\naspect = 1\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p3,aspect),cols=3)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig4.pdf\",useDingbats=FALSE,width=5,height=2)\n\npng \n  2 \n\nShow the codemodel_matched_wts\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_for_real, weights = weights)\n\nCoefficients:\n(Intercept)    treatment  \n    -0.4506      -0.5229  \n\n\n\n\n[1] 323\n\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_noreplace_for_real)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.62875 -0.39014 -0.01118  0.38694  1.77323 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.41094    0.03063  -13.42   &lt;2e-16 ***\ntreatment   -0.54045    0.04331  -12.48   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5504 on 644 degrees of freedom\nMultiple R-squared:  0.1947,    Adjusted R-squared:  0.1934 \nF-statistic: 155.7 on 1 and 644 DF,  p-value: &lt; 2.2e-16\n\n\npng \n  2 \n\n\npng \n  2 \n\n\n# A tibble: 4 × 2\n    cat     n\n  &lt;dbl&gt; &lt;int&gt;\n1    -2   328\n2    -1    26\n3     0   323\n4     1   323\n\n\n\nShow the code# mahalanobis matching, not used \nmaha_matched = matchit(treatment ~ alcohol + stress + caffeine,\n                                              data = cohort,\n           distance = \"mahalanobis\", replace = TRUE)\nmatched_data_maha = match.data(maha_matched)\nmodel_maha_matched = lm(bd ~ treatment, \n                    data = matched_data_maha)\nsummary(model_maha_matched)\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_maha)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.60017 -0.39327 -0.01058  0.38729  1.80181 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.41493    0.03641  -11.39   &lt;2e-16 ***\ntreatment   -0.56504    0.04710  -12.00   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5582 on 582 degrees of freedom\nMultiple R-squared:  0.1982,    Adjusted R-squared:  0.1969 \nF-statistic: 143.9 on 1 and 582 DF,  p-value: &lt; 2.2e-16\n\n\n\nShow the code# propensity score matching with replacement\neffect_by_caliper = function(caliper=0.1,replace=TRUE) {\nmatched_data = matchit(treatment ~ alcohol + stress + caffeine,\n                        data     = cohort,\n                        method   = \"nearest\",\n                        replace  = replace,\n                        caliper  = caliper)\n# get the matched data set\nmatched_data_for_real = match.data(matched_data)\nn = matched_data_for_real |&gt; filter(treatment==T) |&gt; filter(weights&gt;0) |&gt; nrow()\nd = matched_data_for_real |&gt;\n    filter(treatment==T) |&gt;\n    summarize(bd_mean=mean(bd)) -\n    matched_data_for_real |&gt;\n    filter(treatment==F) |&gt;\n    summarize(bd_mean=mean(bd))\nreturn(c(n=as.numeric(n),d=as.numeric(d)))\n}\ncalipers   = seq(0.01,1,by=0.01)\neffects_r  = sapply(calipers,FUN=effect_by_caliper,replace=TRUE)\neffects_nr = sapply(calipers,FUN=effect_by_caliper,replace=FALSE)\np1 = ggplot(data=data.frame(x=calipers,yr=effects_r[1,],ynr=effects_nr[1,])) + geom_line(aes(x=x,y=yr)) + geom_line(aes(x=x,y=ynr),color=\"brown\")\np2 = ggplot(data=data.frame(x=calipers,yr=effects_r[2,],ynr=effects_nr[2,])) + geom_line(aes(x=x,y=yr)) + geom_line(aes(x=x,y=ynr),color=\"brown\")\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),cols=2)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig5.pdf\",useDingbats=FALSE,width=6,height=3)\n\npng \n  2"
  },
  {
    "objectID": "posts/PSM/PSM_NatureMethods.html#propensity-score-matching-nature-methods",
    "href": "posts/PSM/PSM_NatureMethods.html#propensity-score-matching-nature-methods",
    "title": "Nature Methods: Propensity score matching",
    "section": "",
    "text": "Show the code# Simulate a study of bone density (bd) in a cohort of non-smokers and smokers.\n\ncohort_size = 1000\n\n# Bone density (bd) units g/cm^2 expressed as \"T score\" relative to young population. \n# https://www.researchgate.net/publication/259608747_Age-Related_Changes_in_the_Prevalence_of_Osteoporosis_according_to_Gender_and_Skeletal_Site_The_Korea_National_Health_and_Nutrition_Examination_Survey_2008-2010\n# https://www.chatswooddensitometry.com.au/bone-density-results.html\n# T = 0 corresponds to about 1.2 g/cm^2\n#\n#              -2.5         -1.0\n# &lt;--------------|------------|-----------&gt;\n#   osteoporosis   osteopenia   normal\n\nsmoking_bd_true_effect           = -0.5\nmax_individual_covariate_effect  = -0.5\n\n# \"treatment\" refers to membership in smoking group\n# covariate_effect - 0/1 - whether covariates impact bone density (for testing)\n# treatment_effect - 0/1 - whether smoking impacts bone density (for testing)\nmake_cohort = function(covariate_effect=0,treatment_effect=0,seed,n=cohort_size) {\nset.seed(seed)\nblood = tibble(\n  id      = 1:n,\n  #############################################################\n  # ALCOHOL\n  # g/day\n  # https://pophealthmetrics.biomedcentral.com/articles/10.1186/1478-7954-10-6/tables/2\n  # Distribution below from Table 2 (male, USA2)\n  # Min.  1st Qu.   Median     Mean  3rd Qu.     Max.    sd\n  # 0.0003   1.8410   7.5948  14.5125  19.2759 142.6630 19\n  alcohol = rgamma(cohort_size,scale=25.65,shape=0.53),\n  #############################################################\n  # STRESS\n  # perceived stress scale (PSS), 0-40\n  # https://www.slu.edu/medicine/family-medicine/pdfs/perceived-stress-scale.pdf\n  # Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    sd\n  # 0.5266  6.9912 11.6250 12.4698 16.8827 37.3044  7.0\n  stress_base  = bound(50*rbeta(cohort_size,2,6),c(0,40)),\n  #############################################################\n  # CAFFEINE\n  # mg/day\n  # https://www.ncbi.nlm.nih.gov/books/NBK202226/\n  # table 2-1 avg 165 90% 379\n  # Min.  1st Qu.  Median    Mean 3rd Qu.    Max.  90% \n  # 0.034  75.355 166.391 200.789 294.416 773.001  428\n  caffeine = 800*rbeta(cohort_size,1,3),\n) %&gt;% \n  mutate(\n         # +0.5 stress for each alcohol g/day (arbitrary increase)\n         # e.g. those in 75% of alcohol consumption drink 18 g/day = +9 stress ~ s.d. of stress distribution\n         alcohol_stress_effect = alcohol / 2,\n         stress = bound(stress_base + alcohol_stress_effect,c(0,40))) %&gt;%\n  mutate(bd_base             = rnorm(cohort_size,0,0.5),\n         bd_covariate_effect = max_individual_covariate_effect*(\n                                  rescale(stress,  to=c(0,1)) + \n                                  rescale(alcohol, to=c(0,1)) + \n                                  rescale(caffeine,to=c(0,1)))) %&gt;%\n  # Each covariate (arbitrarily) contributes equally to the treatment score\n  # based on subject's percentile value in the covariate's distribution.\n  # The score is then rescaled to a probability in the range [0,1], which is then used\n  # to generate assignment to control (treatment = 0) or treatment (treatment = 1) groups.\n  mutate(\n         treatment_score  = rescale(stress,  to=c(0,1)) + \n                            rescale(alcohol, to=c(0,1)) + \n                            rescale(caffeine,to=c(0,1)), \n         treatment_p      = rescale(treatment_score, to = c(0.1,0.9)),\n         treatment        = rbinom(cohort_size, 1, treatment_p)) %&gt;% \n  # Bone density\n  mutate(\n         # reduction in bd if subject is a smoker\n         bd_treatment_effect = treatment*smoking_bd_true_effect,\n         # final bd, including covariate effects (if toggled) and treatment effect (if toggled)\n         bd = bd_base + covariate_effect*bd_covariate_effect + treatment_effect*bd_treatment_effect)\n}\n\n# 1. Pick a seed\nseed = 20 \n# 2. Cohort A : no treatment or covariate effects\ncohort_a = make_cohort(seed=seed,covariate_effect=0,treatment_effect=0)\npsych::describeBy(stress + alcohol + caffeine + bd ~ treatment, data = cohort_a)\n\n\n Descriptive statistics by group \ntreatment: 0\n         vars   n   mean     sd median trimmed    mad   min    max  range skew\nstress      1 651  16.92   9.24  15.71   16.17   9.20  0.88  40.00  39.12 0.65\nalcohol     2 651  10.78  15.06   5.10    7.63   6.89  0.00 108.19 108.19 2.68\ncaffeine    3 651 180.24 145.66 140.32  163.46 144.68  0.22 693.09 692.87 0.89\nbd          4 651   0.03   0.51   0.03    0.03   0.53 -1.27   1.46   2.74 0.00\n         kurtosis   se\nstress      -0.10 0.36\nalcohol      9.34 0.59\ncaffeine     0.08 5.71\nbd          -0.36 0.02\n------------------------------------------------------------ \ntreatment: 1\n         vars   n   mean     sd median trimmed    mad   min    max  range  skew\nstress      1 349  21.46  10.47  20.48   21.18  12.20  0.62  40.00  39.38  0.21\nalcohol     2 349  18.47  23.38   9.47   13.97  12.96  0.00 142.97 142.97  2.30\ncaffeine    3 349 231.16 166.58 199.42  217.70 187.19  1.69 708.31 706.62  0.61\nbd          4 349   0.01   0.52  -0.02    0.01   0.56 -1.38   1.57   2.95 -0.01\n         kurtosis   se\nstress      -0.96 0.56\nalcohol      6.69 1.25\ncaffeine    -0.58 8.92\nbd          -0.27 0.03\n\nShow the code# 3. Cohort B : covariate effect, no treatment effect\ncohort_b = make_cohort(seed=seed,covariate_effect=1,treatment_effect=0)\npsych::describeBy(stress + alcohol + caffeine + bd ~ treatment, data = cohort_b)\n\n\n Descriptive statistics by group \ntreatment: 0\n         vars   n   mean     sd median trimmed    mad   min    max  range skew\nstress      1 651  16.92   9.24  15.71   16.17   9.20  0.88  40.00  39.12 0.65\nalcohol     2 651  10.78  15.06   5.10    7.63   6.89  0.00 108.19 108.19 2.68\ncaffeine    3 651 180.24 145.66 140.32  163.46 144.68  0.22 693.09 692.87 0.89\nbd          4 651  -0.34   0.55  -0.35   -0.34   0.59 -1.78   1.19   2.97 0.03\n         kurtosis   se\nstress      -0.10 0.36\nalcohol      9.34 0.59\ncaffeine     0.08 5.71\nbd          -0.28 0.02\n------------------------------------------------------------ \ntreatment: 1\n         vars   n   mean     sd median trimmed    mad   min    max  range  skew\nstress      1 349  21.46  10.47  20.48   21.18  12.20  0.62  40.00  39.38  0.21\nalcohol     2 349  18.47  23.38   9.47   13.97  12.96  0.00 142.97 142.97  2.30\ncaffeine    3 349 231.16 166.58 199.42  217.70 187.19  1.69 708.31 706.62  0.61\nbd          4 349  -0.48   0.57  -0.46   -0.48   0.61 -2.08   1.32   3.40 -0.01\n         kurtosis   se\nstress      -0.96 0.56\nalcohol      6.69 1.25\ncaffeine    -0.58 8.92\nbd          -0.19 0.03\n\nShow the code#hist(cohort$bp)\n# 4. Cohort C : covariate and treatment effects\ncohort_c = make_cohort(seed=seed,covariate_effect=1,treatment_effect=1)\npsych::describeBy(stress + alcohol + caffeine + bd ~ treatment, data = cohort_c)\n\n\n Descriptive statistics by group \ntreatment: 0\n         vars   n   mean     sd median trimmed    mad   min    max  range skew\nstress      1 651  16.92   9.24  15.71   16.17   9.20  0.88  40.00  39.12 0.65\nalcohol     2 651  10.78  15.06   5.10    7.63   6.89  0.00 108.19 108.19 2.68\ncaffeine    3 651 180.24 145.66 140.32  163.46 144.68  0.22 693.09 692.87 0.89\nbd          4 651  -0.34   0.55  -0.35   -0.34   0.59 -1.78   1.19   2.97 0.03\n         kurtosis   se\nstress      -0.10 0.36\nalcohol      9.34 0.59\ncaffeine     0.08 5.71\nbd          -0.28 0.02\n------------------------------------------------------------ \ntreatment: 1\n         vars   n   mean     sd median trimmed    mad   min    max  range  skew\nstress      1 349  21.46  10.47  20.48   21.18  12.20  0.62  40.00  39.38  0.21\nalcohol     2 349  18.47  23.38   9.47   13.97  12.96  0.00 142.97 142.97  2.30\ncaffeine    3 349 231.16 166.58 199.42  217.70 187.19  1.69 708.31 706.62  0.61\nbd          4 349  -0.98   0.57  -0.96   -0.98   0.61 -2.58   0.82   3.40 -0.01\n         kurtosis   se\nstress      -0.96 0.56\nalcohol      6.69 1.25\ncaffeine    -0.58 8.92\nbd          -0.19 0.03\n\nShow the code# Naive model that tests bp difference without accounting for covariates\nmeans  = cohort_c |&gt; group_by(treatment) |&gt; summarize(mean(bd))\neffect = as.numeric(means[2,2]-means[1,2])\neffect\n\n[1] -0.639786\n\nShow the code# Cohort A has no covariate or treatment effects. Both treated (smokers) and control (non-smokers)\n# should have the same distribution of bone density (bd)\np1 = ggplot() + geom_density(data=cohort_a |&gt; filter(treatment==T),aes(bd),color=palette[1]) +\n  geom_density(data=cohort_a |&gt; filter(treatment==F),aes(bd),color=\"black\") +\n  geom_vline(xintercept = cohort_a |&gt; filter(treatment==T) |&gt; select(bd) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_a |&gt; filter(treatment==F) |&gt; select(bd) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\n# The magnitude of the covariate effect.\np2 = ggplot() + geom_density(data=cohort_b |&gt; filter(treatment==T),aes(bd_covariate_effect),color=palette[1]) +\n  geom_density(data=cohort_b |&gt; filter(treatment==F),aes(bd_covariate_effect),color=\"black\") +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==T) |&gt; select(bd_covariate_effect) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==F) |&gt; select(bd_covariate_effect) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\n# Treatment probability.\np2b = ggplot() + geom_density(data=cohort_b |&gt; filter(treatment==T),aes(treatment_p),color=palette[1]) +\n  geom_density(data=cohort_b |&gt; filter(treatment==F),aes(treatment_p),color=\"black\") +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==T) |&gt; select(treatment_p) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==F) |&gt; select(treatment_p) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(0,1),breaks=seq(0,1,by=.2))\n  \n# Cohort B : covariate effect but no treatment effect\np3 = ggplot() + geom_density(data=cohort_b |&gt; filter(treatment==T),aes(bd),color=palette[1]) +\n  geom_density(data=cohort_b |&gt; filter(treatment==F),aes(bd),color=\"black\") +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==T) |&gt; select(bd) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_b |&gt; filter(treatment==F) |&gt; select(bd) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\n# Cohort B : covariate and treatment effect\np4 = ggplot() + geom_density(data=cohort_c |&gt; filter(treatment==T),aes(bd),color=palette[1]) +\n  geom_density(data=cohort_c |&gt; filter(treatment==F),aes(bd),color=\"black\") +\n  geom_vline(xintercept = cohort_c |&gt; filter(treatment==T) |&gt; select(bd) |&gt; as_vector() |&gt; mean(),color=palette[1]) +\n  geom_vline(xintercept = cohort_c |&gt; filter(treatment==F) |&gt; select(bd) |&gt; as_vector() |&gt; mean()) +\n  scale_x_continuous(lim=c(-2,2),breaks=seq(-2,2,by=0.5))\n\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p2b,aspect),plot_theme(p3,aspect),plot_theme(p4,aspect),cols=1)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig-distributions.pdf\",useDingbats=FALSE,width=5,height=3)\n\npng \n  2 \n\nShow the codecohort        = cohort_c\nmodel_matched = lm(bd ~ treatment, \n                    data = cohort_c)\nsummary(model_matched)\n\n\nCall:\nlm(formula = bd ~ treatment, data = cohort_c)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.60017 -0.40313  0.00176  0.39403  1.80181 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.34018    0.02179  -15.61   &lt;2e-16 ***\ntreatment   -0.63979    0.03689  -17.34   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.556 on 998 degrees of freedom\nMultiple R-squared:  0.2316,    Adjusted R-squared:  0.2309 \nF-statistic: 300.9 on 1 and 998 DF,  p-value: &lt; 2.2e-16\n\n\n\nShow the code# propensity score matching with replacement\nmatched_data = matchit(treatment ~ alcohol + stress + caffeine,\n                        data     = cohort,\n                        method   = \"nearest\",\n                        replace  = TRUE,\n                        caliper  = 0.1)\n\ncohort$w   = matched_data$weights\ncohort$ps  = matched_data$distance\ncohort$cat = 0\n\ncohort[cohort$w == 0 & cohort$treatment==F,]$cat=-2  # unmatched control\ncohort[cohort$w == 0 & cohort$treatment==T,]$cat=-1  # unmatched treat\ncohort[cohort$w &gt; 0  & cohort$treatment==F,]$cat=0   # matched   control\ncohort[cohort$w &gt; 0  & cohort$treatment==T,]$cat=1   # matched   treat\ncohort |&gt; count(cat)\n\n# A tibble: 4 × 2\n    cat     n\n  &lt;dbl&gt; &lt;int&gt;\n1    -2   416\n2    -1     5\n3     0   235\n4     1   344\n\n\n\nShow the codeaspect = 1/3 # for plots\n\n# full cohort\n# plot densities of alcohol, stress, caffine\n\nvarT = cohort|&gt;filter(treatment==T)|&gt;select(alcohol)\nvarF = cohort|&gt;filter(treatment==F)|&gt;select(alcohol)\np1 = ggplot() + \n    geom_density(data=varF,aes(alcohol),color=\"black\",size=1) +\n    geom_density(data=varT,aes(alcohol),color=palette[1],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,100)) +\n  scale_y_continuous(lim=c(0,0.1))\n\nvarT = cohort|&gt;filter(treatment==T)|&gt;select(stress)\nvarF = cohort|&gt;filter(treatment==F)|&gt;select(stress)\np2 = ggplot() + \n    geom_density(data=varF,aes(stress),color=\"black\",size=1) +\n    geom_density(data=varT,aes(stress),color=palette[1],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-5,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+5,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,40)) +\n  scale_y_continuous(lim=c(0,0.06))\n\nvarT = cohort|&gt;filter(treatment==T)|&gt;select(caffeine)\nvarF = cohort|&gt;filter(treatment==F)|&gt;select(caffeine)\np3 = ggplot() + \n    geom_density(data=varF,aes(caffeine),color=\"black\",size=1) +\n    geom_density(data=varT,aes(caffeine),color=palette[1],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) + \n    scale_x_continuous(lim=c(0,400),breaks=seq(0,400,by=50)) +\n    scale_y_continuous(lim=c(0,0.006))\n\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p3,aspect),cols=1)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig2a.pdf\",useDingbats=FALSE,width=5,height=3)\n\npng \n  2 \n\nShow the code# matched/unmatched\n# plot densities of alcohol, cholesterol, caffeine\n\nvarT   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==T)|&gt;select(alcohol)\nvarF   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==F)|&gt;select(alcohol)\nvarFun = cohort[matched_data$weights==0,]|&gt;filter(treatment==F)|&gt;select(alcohol)\np1 = ggplot() + \n    geom_density(data=varF,aes(alcohol),color=\"black\",size=1) +\n    geom_density(data=varT,aes(alcohol),color=palette[1],size=1) +\n    geom_density(data=varFun,aes(alcohol),color=palette[2],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    geom_vline(xintercept=varFun|&gt;as_vector()|&gt;mean(),color=palette[2]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varFun|&gt;as_vector()|&gt;mean()-1,y=0,label=varFun|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[2],size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,100)) +\n  scale_y_continuous(lim=c(0,0.1))\n\nvarT   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==T)|&gt;select(stress)\nvarF   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==F)|&gt;select(stress)\nvarFun = cohort[matched_data$weights==0,]|&gt;filter(treatment==F)|&gt;select(stress)\np2 = ggplot() + \n    geom_density(data=varF,aes(stress),color=\"black\",size=1) +\n    geom_density(data=varT,aes(stress),color=palette[1],size=1) +\n    geom_density(data=varFun,aes(stress),color=palette[2],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    geom_vline(xintercept=varFun|&gt;as_vector()|&gt;mean(),color=palette[2]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varFun|&gt;as_vector()|&gt;mean()-1,y=0,label=varFun|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[2],size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n  scale_x_continuous(lim=c(0,40)) +\n  scale_y_continuous(lim=c(0,0.06))\n\nvarT   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==T)|&gt;select(caffeine)\nvarF   = cohort[matched_data$weights&gt;0,]|&gt;filter(treatment==F)|&gt;select(caffeine)\nvarFun = cohort[matched_data$weights==0,]|&gt;filter(treatment==F)|&gt;select(caffeine)\np3 = ggplot() + \n    geom_density(data=varF,aes(caffeine),color=\"black\",size=1) +\n    geom_density(data=varT,aes(caffeine),color=palette[1],size=1) +\n    geom_density(data=varFun,aes(caffeine),color=palette[2],size=1) +\n    geom_vline(xintercept=varF|&gt;as_vector()|&gt;mean(),color=\"black\") +\n    geom_vline(xintercept=varT|&gt;as_vector()|&gt;mean(),color=palette[1]) +\n    geom_vline(xintercept=varFun|&gt;as_vector()|&gt;mean(),color=palette[2]) +\n    annotate(\"text\",x=varF|&gt;as_vector()|&gt;mean()-1,y=0,label=varF|&gt;as_vector()|&gt;mean()|&gt;round(1),color=\"black\",size=3,hjust=1) +\n    annotate(\"text\",x=varFun|&gt;as_vector()|&gt;mean()-1,y=0,label=varFun|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[2],size=3,hjust=1) +\n    annotate(\"text\",x=varT|&gt;as_vector()|&gt;mean()+1,y=0,label=varT|&gt;as_vector()|&gt;mean()|&gt;round(1),color=palette[1],size=3,hjust=0) +\n    scale_x_continuous(lim=c(0,400),breaks=seq(0,400,by=50)) +\n    scale_y_continuous(lim=c(0,0.006))\n\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p3,aspect),cols=1)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig2b.pdf\",useDingbats=FALSE,width=5,height=3)\n\npng \n  2 \n\n\n\nShow the codepdf(\"fig3a.pdf\")\nplot(matched_data, type = \"jitter\", interactive = FALSE)\ndev.off()\n\npng \n  2 \n\nShow the codepdf(\"fig3b.pdf\")\nlove.plot(matched_data, binary = \"std\")\ndev.off()\n\npng \n  2 \n\n\n\nShow the code# get the matched data set\nmatched_data_for_real = match.data(matched_data)\nmatched_data_for_real |&gt; nrow()\n\n[1] 579\n\nShow the code# new linear model with matched data\nmodel_matched = lm(bd ~ treatment, \n                    data = matched_data_for_real)\nsummary(model_matched)\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_for_real)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.6067 -0.3913  0.0018  0.3920  1.7953 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.42417    0.03647  -11.63   &lt;2e-16 ***\ntreatment   -0.54927    0.04732  -11.61   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5591 on 577 degrees of freedom\nMultiple R-squared:  0.1893,    Adjusted R-squared:  0.1879 \nF-statistic: 134.7 on 1 and 577 DF,  p-value: &lt; 2.2e-16\n\nShow the code# get the same result by comparing means\nmatched_data_for_real |&gt;\n  filter(treatment==T) |&gt;\n  summarize(blood_mean=mean(bd)) -\n  matched_data_for_real |&gt;\n  filter(treatment==F) |&gt;\n  summarize(blood_mean=mean(bd))\n\n  blood_mean\n1 -0.5492713\n\n\n\nShow the code# jitter plot of unmatched data (entire cohort)\nbd_min = -3\nbd_max = 1.5\np1 = ggplot(cohort, aes(x=treatment, y=bd)) +  \n  geom_jitter(width=0.2,shape=16,size=0.5) +\n  stat_summary(fun = \"mean\", geom = \"crossbar\", width = .5, color = \"orange\") +\n  annotate(\"text\", x = 0.25, y = 0, hjust=0,size=3,label = cohort |&gt; \n             filter(treatment==F) |&gt; \n             select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  annotate(\"text\", x = 1.25, y = 0, hjust=0,size=3,label = cohort |&gt; \n             filter(treatment==T) |&gt; \n             select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  scale_x_continuous(lim=c(-2.25,1.75))  +\n  scale_y_continuous(lim=c(bd_min,bd_max),breaks=seq(bd_min,bd_max,by=1))\n# jitter plot of matched data \np2 = ggplot(cohort, aes(x=cat, y=bd)) +  \n  geom_jitter(width=0.2,shape=16,size=0.5) +\n  stat_summary(fun = \"mean\", geom = \"crossbar\", width = .5, color = \"orange\") +\n  annotate(\"text\",x=-1.75,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==-2)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(1)) +\n  annotate(\"text\",x=-0.75,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==-1)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  annotate(\"text\",x=0.25,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==0)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  annotate(\"text\",x=1.25,y=0,hjust=0,size=3,\n             label=cohort|&gt;filter(cat==1)|&gt;select(bd) |&gt; as_vector() |&gt; mean() |&gt; round(2)) +\n  scale_x_continuous(lim=c(-2.25,1.75)) +\n  scale_y_continuous(lim=c(bd_min,bd_max),breaks=seq(bd_min,bd_max,by=1))\n\n# linear model with weights\nmodel_matched_wts = lm(bd ~ treatment, \n                        data = matched_data_for_real,\n                        weights = weights)\nsummary(model_matched_wts)\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_for_real, weights = weights)\n\nWeighted Residuals:\n     Min       1Q   Median       3Q      Max \n-1.93615 -0.36786  0.01487  0.37422  1.79528 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.45059    0.03663   -12.3   &lt;2e-16 ***\ntreatment   -0.52286    0.04753   -11.0   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5616 on 577 degrees of freedom\nMultiple R-squared:  0.1734,    Adjusted R-squared:  0.1719 \nF-statistic:   121 on 1 and 577 DF,  p-value: &lt; 2.2e-16\n\nShow the codedata = matched_data_for_real \n# plot\nwmean_f = as.numeric(data|&gt;filter(treatment==F)|&gt;select(bd, weights) |&gt; summarize(weighted_mean=weighted.mean(bd, weights)))\nwmean_t = as.numeric(data|&gt;filter(treatment==T)|&gt;select(bd, weights) |&gt; summarize(weighted_mean=weighted.mean(bd, weights)))\np3 = ggplot(data, aes(x=treatment, y=bd)) +  \n  geom_jitter(width=0.2,shape=16,size=scales::rescale(matched_data_for_real$weights, to=c(0.25, 1.25))) +\n  annotate(\"segment\",x=-0.25,y = as.numeric(wmean_f), xend=0.25, yend = as.numeric(wmean_f), color=\"orange\")+\n  annotate(\"segment\",x=0.75,y = as.numeric(wmean_t), xend=1.25, yend = as.numeric(wmean_t), color=\"orange\")+\n  annotate(\"text\",x=0.25,y=wmean_f,hjust=0,size=3,label=wmean_f |&gt; round(2)) +\n  annotate(\"text\",x=1.25,y=wmean_t,hjust=0,size=3,label=wmean_t |&gt; round(2)) +\n  scale_x_continuous(lim=c(-2.25,1.75)) +\n  scale_y_continuous(lim=c(bd_min,bd_max),breaks=seq(bd_min,bd_max,by=1))\n\naspect = 1\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),plot_theme(p3,aspect),cols=3)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig4.pdf\",useDingbats=FALSE,width=5,height=2)\n\npng \n  2 \n\nShow the codemodel_matched_wts\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_for_real, weights = weights)\n\nCoefficients:\n(Intercept)    treatment  \n    -0.4506      -0.5229  \n\n\n\n\n[1] 323\n\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_noreplace_for_real)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.62875 -0.39014 -0.01118  0.38694  1.77323 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.41094    0.03063  -13.42   &lt;2e-16 ***\ntreatment   -0.54045    0.04331  -12.48   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5504 on 644 degrees of freedom\nMultiple R-squared:  0.1947,    Adjusted R-squared:  0.1934 \nF-statistic: 155.7 on 1 and 644 DF,  p-value: &lt; 2.2e-16\n\n\npng \n  2 \n\n\npng \n  2 \n\n\n# A tibble: 4 × 2\n    cat     n\n  &lt;dbl&gt; &lt;int&gt;\n1    -2   328\n2    -1    26\n3     0   323\n4     1   323\n\n\n\nShow the code# mahalanobis matching, not used \nmaha_matched = matchit(treatment ~ alcohol + stress + caffeine,\n                                              data = cohort,\n           distance = \"mahalanobis\", replace = TRUE)\nmatched_data_maha = match.data(maha_matched)\nmodel_maha_matched = lm(bd ~ treatment, \n                    data = matched_data_maha)\nsummary(model_maha_matched)\n\n\nCall:\nlm(formula = bd ~ treatment, data = matched_data_maha)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.60017 -0.39327 -0.01058  0.38729  1.80181 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.41493    0.03641  -11.39   &lt;2e-16 ***\ntreatment   -0.56504    0.04710  -12.00   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5582 on 582 degrees of freedom\nMultiple R-squared:  0.1982,    Adjusted R-squared:  0.1969 \nF-statistic: 143.9 on 1 and 582 DF,  p-value: &lt; 2.2e-16\n\n\n\nShow the code# propensity score matching with replacement\neffect_by_caliper = function(caliper=0.1,replace=TRUE) {\nmatched_data = matchit(treatment ~ alcohol + stress + caffeine,\n                        data     = cohort,\n                        method   = \"nearest\",\n                        replace  = replace,\n                        caliper  = caliper)\n# get the matched data set\nmatched_data_for_real = match.data(matched_data)\nn = matched_data_for_real |&gt; filter(treatment==T) |&gt; filter(weights&gt;0) |&gt; nrow()\nd = matched_data_for_real |&gt;\n    filter(treatment==T) |&gt;\n    summarize(bd_mean=mean(bd)) -\n    matched_data_for_real |&gt;\n    filter(treatment==F) |&gt;\n    summarize(bd_mean=mean(bd))\nreturn(c(n=as.numeric(n),d=as.numeric(d)))\n}\ncalipers   = seq(0.01,1,by=0.01)\neffects_r  = sapply(calipers,FUN=effect_by_caliper,replace=TRUE)\neffects_nr = sapply(calipers,FUN=effect_by_caliper,replace=FALSE)\np1 = ggplot(data=data.frame(x=calipers,yr=effects_r[1,],ynr=effects_nr[1,])) + geom_line(aes(x=x,y=yr)) + geom_line(aes(x=x,y=ynr),color=\"brown\")\np2 = ggplot(data=data.frame(x=calipers,yr=effects_r[2,],ynr=effects_nr[2,])) + geom_line(aes(x=x,y=yr)) + geom_line(aes(x=x,y=ynr),color=\"brown\")\nmultiplot(plot_theme(p1,aspect),plot_theme(p2,aspect),cols=2)\n\n\n\n\n\n\nShow the codedev.copy2pdf(file = \"fig5.pdf\",useDingbats=FALSE,width=6,height=3)\n\npng \n  2"
  }
]