{
  "hash": "e2c1e3e8a460e33afe71bb2c437b274d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"iterated function system\"\ndate: today\ncategories: [graphics, art]\nimage: \"fern.svg\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Rcpp)\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(ggthemes)\nlibrary(tictoc)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfern_transform <- function(coord, ind) {\n  \n  # coefficients for the stem function f_1\n  if(ind == 1) {\n    mat <- matrix(c(0, 0, 0, .16), 2, 2) # matrix to multiply\n    off <- c(0, 0)                       # offset vector to add\n  }\n  \n  # coefficients for the small leaflet function f_2\n  if(ind == 2) {\n    mat <- matrix(c(.85, -.04, .04, .85), 2, 2)\n    off <- c(0, 1.6)                      \n  }\n  # coefficients for the right-side function f_3\n  if(ind == 3) {\n    mat <- matrix(c(.2, .23, -.26, .22), 2, 2)\n    off <- c(0, 1.6)                      \n  }\n  \n  # coefficients for the left-side function f_4\n  if(ind == 4) {\n    mat <- matrix(c(-.15, .26, .28, .24), 2, 2)\n    off <- c(0, .44)                     \n  }\n  \n  # return the affine transformed coords\n  coord <- mat %*% coord + off\n  return(coord)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfern_chaos <- function(iterations = 10000, seed = NULL) {\n  if(!is.null(seed)) set.seed(seed)\n  \n  # which transformation to apply at each iteration\n  transform_index <- sample(\n    x = 1:4, \n    size = iterations, \n    replace= TRUE, \n    prob = c(.01, .85, .07, .07)\n  )\n  \n  # initialise chaos game at the origin\n  start <- matrix(c(0, 0))\n  \n  # helper function to collapse accumulated output\n  bind_to_column_matrix <- function(lst) {\n    do.call(cbind, lst)\n  }\n  \n  # iterate until done!\n  coord_matrix <- transform_index |>\n    accumulate(fern_transform, .init = start) |>\n    bind_to_column_matrix() \n  \n  # tidy the output, add extra columns, and return\n  coord_df <- t(coord_matrix) |> \n    as.data.frame() \n  names(coord_df) <- c(\"x\", \"y\")\n  coord_df <- coord_df |>\n    as_tibble() |>\n    mutate(\n      transform = c(0, transform_index),\n      iteration = row_number() - 1\n    )\n  return(coord_df)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfern_dat <- fern_chaos(seed = 1)\nfern_dat %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 Ã— 4\n       x     y transform iteration\n   <dbl> <dbl>     <dbl>     <dbl>\n1  0      0            0         0\n2  0      1.6          2         1\n3  0.064  2.96         2         2\n4  0.173  4.11         2         3\n5 -1.03   2.54         3         4\n6 -0.778  3.80         2         5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fern_dat, aes(x, y)) +\n  geom_point(colour = \"yellow\", size = 1, stroke = 0) +\n  coord_equal() +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(fern_dat, aes(x, y, colour = iteration)) +\n  geom_point(size = 1, stroke = 0, show.legend = FALSE) +\n  coord_equal() +\n  theme_void() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}